import React, { useState } from "react";
import AsyncSelect from 'react-select/async';
import DatePicker from "react-datepicker";
import "react-datepicker/dist/react-datepicker.css";
import rv from './assets/insurance-rv.png';
import all from './assets/insurance-all.png';
import captcha from './assets/captcha-image.png';
import klarna from './assets/klarna.png';
import paypal from './assets/paypal.png';
import sofort from './assets/sofort.png';
import success from './assets/success.svg';
import { getNames } from "country-list";


const countries = getNames();

const asyncSelectStyles = {
  control: (provided, state) => ({
    ...provided,
    padding: state.isFocused || state.isHovered ? '0.5rem 0.5rem' : '0.5rem 0.5rem',
    width: '100%',
    borderRadius: '10rem',
    background: state.isFocused || state.isHovered ? '#ffffff' : '#f4f4f4',
    border: state.isFocused || state.isHovered ? '1px solid rgb(0, 192, 0)' : '1px solid lightgray',
    boxShadow: 'none',
    fontSize: '14px',
    color: 'gray',
    fontWeight: state.isFocused || state.isHovered ? 800 : 800,
    marginTop: '0.75rem',
    minHeight: 'auto',
  }),
  input: (provided) => ({
    ...provided,
    margin: 0,
    padding: 0,
    color: 'gray',
  }),
  singleValue: (provided) => ({
    ...provided,
    color: 'gray',
    fontWeight: 600,
  }),
  placeholder: (provided) => ({
    ...provided,
    color: 'gray',
    fontWeight: 600,
  }),
  menu: (provided) => ({
    ...provided,
    borderRadius: '1rem',
    marginTop: 0,
    zIndex: 10,
  }),
  option: (provided, state) => ({
    ...provided,
    backgroundColor: state.isFocused ? '#e6e6e6' : '#f4f4f4',
    color: 'gray',
    fontWeight: 600,
    cursor: 'pointer',
  }),
  dropdownIndicator: (provided) => ({
    ...provided,
    color: 'gray',
  }),
  indicatorSeparator: () => ({
    display: 'none',
  }),
};



const Form = () => {
  const [step, setStep] = useState(1);

  const [formData, setFormData] = useState({
    insurance: "", insurancefor: "", insurancestartdate: "", genderpronouns: "", name: "", lastname: "", birthday: "", nationality: "", insuranceregion: "", glassesinformation: "", healthinformation: "",
    postalcode: "", location:"", street: "", housenumber: "", email: "", tel: "", paymentfrequency: "", accountholder: "", /* paymentoptions:"" */ iban: "", bic: "", bank: "", sepapermissions: false, forfitdamages: false, waiverreciept: false, termsConsent:false,  dataprivacy:false, captcha:""
  });

  
  // --- FETCH FUNCTIONS ---
  
  const fetchLocationSuggestions = async (query) => {
    if (!query || query.length < 2) return [];
  
    try {
      const response = await fetch(`https://openplzapi.org/de/Localities?name=${encodeURIComponent(query)}`);
      const data = await response.json();
      console.log("City API data:", data);
  
      return Array.isArray(data)
        ? data.map((item) => ({
            label: `${item.postalCode} - ${item.name}`,
            value: JSON.stringify({
              city: item.name,
              postalcode: item.postalCode,
            }),
          }))
        : [];
    } catch (error) {
      console.error("Error fetching city/location suggestions:", error);
      return [];
    }
  };
  
  const fetchStreetSuggestions = async (query, postalcode) => {
    if (!postalcode) return [];
  
    try {
      const response = await fetch(`https://openplzapi.org/de/Streets?postalCode=${encodeURIComponent(postalcode)}`);
      const data = await response.json();
  
      // Filter suggestions if the user is typing
      const filtered = query
        ? data.filter((item) =>
            item.name && item.name.toLowerCase().includes(query.toLowerCase())
          )
        : data;
  
      return Array.isArray(filtered)
        ? filtered.map((item) => ({
            label: item.name,
            value: item.name,
          }))
        : [];
    } catch (error) {
      console.error("Error fetching street suggestions:", error);
      return [];
    }
  };
  
  
  const handleLocationChange = (selectedOption) => {
    if (!selectedOption) return;
  
    const { city, postalcode } = JSON.parse(selectedOption.value);
    setFormData((prev) => ({
      ...prev,
      location: city,
      postalcode: postalcode,
      street: "", // Clear if city changes
    }));
  };  
  
  const handleChange = (eventOrOption, fieldName = null) => {
    if (fieldName) {
      const value = eventOrOption ? eventOrOption.value : "";
      setFormData((prev) => ({
        ...prev,
        [fieldName]: value,
      }));
    } else {
      const { name, value, type, checked } = eventOrOption.target;
  
      setFormData((prev) => {
        const updated = {
          ...prev,
          [name]: type === "checkbox" ? checked : value,
        };
  
        // If fullname is being changed, and accountholder is still blank, prefill it
        if (name === "fullname" && !prev.accountholder) {
          updated.accountholder = value;
        }
  
        return updated;
      });
    }
  };
  
  const [downloads, setDownloads] = useState({
    VertragsinformationenDownloaded: false,
    datenschutzDownloaded: false
  });
  
  const handleDownload = (file, key) => {
    const link = document.createElement("a");
    link.href = file;
    link.download = file.split("/").pop();
    link.click();
  
    setDownloads((prev) => ({ ...prev, [key]: true }));
  };
  
  
  

  const [isMoreInfoVisible, setIsMoreInfoVisible] = useState(false);

  const prevStep = () => setStep(step - 1);

  const nextStep = () => {
    if (isStepValid()) {
      setStep(step + 1);
    } else {
      alert("Please fill out all required fields before continuing.");
    }
  };
  

  const handleSubmit = (e) => {
    e.preventDefault(); // Prevents default form submission
  
    // check if the form is valid before moving to the next step
    if (isStepValid()) {
      // if valid move to step 5
      setStep(5); 
    } else {
      // error message or highlight invalid fields
      console.log("Form is not valid");
    }
  };
  
  
  const isStepValid = () => {
    /* if (step === 1) {
      return formData.insurance !== "";
    } */
  
    if (step === 1) {
      return (
        formData.insurancefor &&
        formData.insurancestartdate &&
        formData.name &&
        formData.lastname &&
        formData.genderpronouns &&
        formData.birthday &&
        formData.nationality &&
        formData.insuranceregion &&
        formData.healthinformation
      );
    }
  
    if (step === 2) {
      return (
        formData.postalcode &&
        formData.location &&
        formData.street &&
        formData.housenumber &&
        formData.email &&
        formData.tel &&
        formData.paymentfrequency &&
        formData.iban &&
        formData.bic &&
        formData.bank &&
        formData.sepapermissions
      );
    }

    if (step === 3) {
      return (
        formData.forfitdamages &&
        formData.waiverreciept &&
        formData.termsConsent &&
        formData.dataprivacy &&
        formData.captcha
      );
    }
  
    return true; // for other steps or final confirmation
  };
  

  // Header embedded directly
  const Header = () => {
    const getIndicatorClass = (stepNumber) => {
      return step === stepNumber ? 'indicator-on' : 'indicator-off';
    };

    return (
      <header style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', padding: '0.5rem' }}>
        <div className="form-step-indicator">
          <div className={getIndicatorClass(1)}>Tarif­angaben</div>
          <div className={getIndicatorClass(2)}>Persönliche Daten</div>
          <div className={getIndicatorClass(3)}>Zustimmungen</div>
          <div className={getIndicatorClass(4)}>Bestätigung</div>
        </div>
        <div className="form-step-indicator-mobile">
          <div className={getIndicatorClass(1)}>1</div>
          <div className={getIndicatorClass(2)}>2</div>
          <div className={getIndicatorClass(3)}>3</div>
          <div className={getIndicatorClass(4)}>4</div>
        </div>
      </header>
    );
  };

  return (
    <div>
      <Header />
      <div className="multi_step_form">
        <form onSubmit={handleSubmit}>
          {/* {step === 1 && (
            <>
              <div className="information-field">
                <div className="space-between">
                  <h1>Tarif VorsorgePRIVAT</h1>
                  <button type="button" onClick={() => setIsMoreInfoVisible(!isMoreInfoVisible)} className="show-more-button">Weitere Informationen</button>
                </div>
                { isMoreInfoVisible && (
                  <div className="more-information-container">
                    <div className="more-info-group">
                      <div className="more-info-unit">
                        <svg width="17" height="17" viewBox="0 0 17 17" fill="none" xmlns="http://www.w3.org/2000/svg">
                          <path d="M9.41831 0.198559C9.66683 0.384554 9.85473 0.631264 10.0461 0.86844C10.1384 0.982376 10.2354 1.09199 10.334 1.20107C10.4944 1.37874 10.6439 1.56264 10.7906 1.75077C10.8597 1.83125 10.9112 1.88389 11.004 1.93707C11.0814 1.93848 11.0814 1.93848 11.1615 1.91665C11.207 1.90628 11.207 1.90628 11.2535 1.8957C11.2849 1.8877 11.3164 1.87971 11.3487 1.87147C11.3786 1.86394 11.4086 1.85642 11.4394 1.84867C11.5349 1.82387 11.6299 1.79792 11.7249 1.77178C11.7967 1.75253 11.8685 1.73331 11.9402 1.71412C12.0515 1.68429 12.1627 1.65426 12.2737 1.62363C13.3187 1.33612 13.3187 1.33612 13.7165 1.50039C13.9487 1.63879 14.1227 1.84155 14.1945 2.0945C14.2277 2.25063 14.2339 2.40984 14.2443 2.56851C14.2487 2.62737 14.2487 2.62737 14.2531 2.68742C14.2681 2.89722 14.2802 3.10682 14.2882 3.31697C14.2922 3.42176 14.2968 3.52651 14.3015 3.63127C14.3036 3.68251 14.3053 3.73377 14.3066 3.78503C14.3085 3.85727 14.3116 3.92937 14.3149 4.00156C14.3162 4.04312 14.3176 4.08469 14.319 4.12751C14.3383 4.23858 14.3383 4.23858 14.4326 4.30569C14.5801 4.37674 14.729 4.43307 14.8845 4.48629C14.9161 4.49736 14.9477 4.50844 14.9803 4.51985C15.081 4.55508 15.1819 4.58995 15.2828 4.6248C16.4593 5.03363 16.4593 5.03363 16.6422 5.19884C16.6693 5.22247 16.6964 5.24611 16.7243 5.27046C16.8988 5.46236 16.9374 5.65895 16.9331 5.90613C16.8615 6.45857 16.3126 7.03459 15.9874 7.47846C15.9587 7.51814 15.9587 7.51814 15.9294 7.55863C15.8928 7.6093 15.8557 7.65972 15.8182 7.70984C15.7464 7.80953 15.6967 7.88654 15.6703 8.0056C15.7021 8.14873 15.7754 8.25181 15.8602 8.37245C15.8871 8.41199 15.8871 8.41199 15.9146 8.45234C16.0161 8.60063 16.12 8.74741 16.2241 8.89409C16.2656 8.95257 16.307 9.01112 16.3484 9.06966C16.4023 9.14594 16.4567 9.22192 16.5114 9.29772C16.7566 9.64236 16.9897 9.98879 16.919 10.4208C16.8343 10.7362 16.655 10.922 16.3693 11.0909C16.102 11.2332 15.8042 11.3228 15.5176 11.423C15.4204 11.4575 15.3232 11.4921 15.2261 11.5267C15.1661 11.548 15.106 11.5692 15.0459 11.5903C14.8991 11.642 14.7527 11.6944 14.6068 11.7483C14.5786 11.7586 14.5504 11.769 14.5214 11.7796C14.4455 11.8083 14.4455 11.8083 14.3822 11.8761C14.3686 11.9523 14.3686 11.9523 14.366 12.0419C14.3641 12.0765 14.3623 12.1112 14.3604 12.1468C14.3587 12.1845 14.357 12.2222 14.3553 12.261C14.3532 12.2999 14.3512 12.3388 14.3491 12.3788C14.3426 12.5037 14.3365 12.6286 14.3305 12.7536C14.3245 12.8771 14.3183 13.0006 14.3119 13.1241C14.3079 13.201 14.3041 13.2779 14.3006 13.3548C14.2573 14.1978 14.2573 14.1978 14.003 14.4675C13.7462 14.6587 13.5014 14.7261 13.1757 14.6971C13.0078 14.6652 12.8431 14.623 12.678 14.5803C12.6309 14.5684 12.5838 14.5565 12.5367 14.5447C12.3058 14.4865 12.0754 14.4265 11.845 14.3661C11.8045 14.3556 11.7639 14.345 11.7222 14.3341C11.6459 14.3142 11.5696 14.2939 11.4935 14.2734C11.2508 14.2002 11.2508 14.2002 11.004 14.2051C10.9215 14.2725 10.8596 14.3518 10.795 14.4347C10.7556 14.4831 10.7161 14.5316 10.6767 14.58C10.6567 14.6049 10.6367 14.6299 10.6161 14.6556C10.5224 14.7712 10.4249 14.8837 10.3275 14.9964C10.2186 15.1232 10.1106 15.2504 10.0062 15.3806C9.52445 15.9813 9.52445 15.9813 9.16125 16.0638C8.86342 16.1012 8.62983 16.0292 8.38807 15.8672C8.19539 15.72 8.05072 15.5352 7.90156 15.3497C7.79302 15.2147 7.68062 15.0829 7.56762 14.9513C7.52982 14.9072 7.49202 14.8631 7.45424 14.819C7.43645 14.7982 7.41867 14.7774 7.40034 14.756C7.08404 14.3857 7.08404 14.3857 7.01944 14.2762C6.94613 14.1983 6.94613 14.1983 6.86512 14.2023C6.65088 14.226 6.44924 14.2678 6.24221 14.3249C6.21037 14.3334 6.17853 14.342 6.14573 14.3507C6.04509 14.3778 5.94456 14.4052 5.84404 14.4326C5.77625 14.4509 5.70845 14.4692 5.64065 14.4874C5.51617 14.5209 5.39173 14.5546 5.26736 14.5884C5.2404 14.5958 5.21345 14.6031 5.18568 14.6106C5.13665 14.624 5.08767 14.6376 5.03875 14.6514C4.73999 14.735 4.43729 14.7351 4.1517 14.6093C3.91216 14.4733 3.75804 14.2702 3.6781 14.0171C3.65746 13.9242 3.65259 13.8345 3.64773 13.7396C3.64553 13.6986 3.64332 13.6575 3.64106 13.6152C3.63937 13.5825 3.63937 13.5825 3.63765 13.5491C3.63157 13.4331 3.62468 13.3173 3.61793 13.2013C3.60941 13.054 3.60112 12.9067 3.5937 12.7593C3.58767 12.64 3.58083 12.5207 3.57346 12.4015C3.5708 12.3561 3.56844 12.3107 3.56638 12.2652C3.56347 12.2018 3.55944 12.1383 3.55535 12.0749C3.55339 12.0388 3.55143 12.0027 3.54941 11.9655C3.53212 11.8701 3.53212 11.8701 3.4438 11.8178C3.3323 11.7693 3.3323 11.7693 3.21873 11.7255C3.19395 11.7166 3.16916 11.7076 3.14362 11.6983C3.11715 11.6889 3.09069 11.6794 3.06343 11.6697C3.03538 11.6595 3.00734 11.6494 2.97845 11.6389C2.88879 11.6064 2.79905 11.5742 2.70929 11.542C2.50435 11.4683 2.29964 11.3941 2.09548 11.3185C2.03574 11.2964 1.97594 11.2744 1.91609 11.2525C1.82733 11.2199 1.73896 11.1865 1.65063 11.1528C1.62413 11.1432 1.59763 11.1336 1.57033 11.1237C1.32672 11.029 1.15417 10.8801 1.02665 10.6604C0.934337 10.4349 0.913773 10.175 1.01179 9.94947C1.13054 9.71624 1.27182 9.49988 1.42307 9.28476C1.46845 9.21937 1.51383 9.15398 1.5592 9.08858C1.58197 9.05593 1.60474 9.02327 1.6282 8.98962C1.73666 8.83365 1.84381 8.67687 1.95091 8.52006C1.96998 8.49226 1.98904 8.46445 2.00869 8.43581C2.03488 8.39753 2.03488 8.39753 2.0616 8.35848C2.0769 8.33614 2.0922 8.3138 2.10797 8.29079C2.18348 8.17664 2.19664 8.10882 2.17929 7.97267C2.12388 7.8665 2.05386 7.77082 1.98323 7.67335C1.94201 7.6148 1.90081 7.55624 1.85962 7.49768C1.83834 7.46777 1.81707 7.43786 1.79515 7.40704C1.63769 7.18457 1.48544 6.95877 1.33255 6.73344C1.30108 6.68715 1.26952 6.64092 1.23782 6.59477C1.03518 6.29933 0.876279 6.03834 0.953124 5.67139C1.02135 5.43737 1.15015 5.25823 1.37291 5.13461C1.61232 5.02299 1.85362 4.92415 2.10294 4.83443C2.15793 4.81433 2.15793 4.81433 2.21403 4.79382C2.32949 4.75164 2.44505 4.70973 2.56063 4.66785C2.6773 4.62548 2.79395 4.58305 2.91055 4.54048C2.9827 4.51414 3.0549 4.48792 3.12715 4.46184C3.15963 4.45 3.1921 4.43817 3.22556 4.42597C3.25409 4.41564 3.28262 4.4053 3.31201 4.39466C3.39368 4.3637 3.39368 4.3637 3.4892 4.29883C3.5296 4.19639 3.53082 4.09133 3.53599 3.98276C3.53783 3.94564 3.53968 3.90851 3.54158 3.87026C3.54438 3.81024 3.54438 3.81024 3.54724 3.74901C3.55152 3.66408 3.55581 3.57915 3.5601 3.49421C3.56673 3.36048 3.57323 3.22675 3.5796 3.093C3.58577 2.96382 3.59236 2.83466 3.59895 2.70549C3.60075 2.66581 3.60254 2.62613 3.6044 2.58525C3.6225 2.23643 3.66 1.94933 3.90286 1.67466C4.16334 1.46898 4.46915 1.45296 4.79562 1.47097C5.02381 1.49261 5.24465 1.55692 5.46485 1.6152C5.51826 1.62881 5.57168 1.64237 5.62512 1.65587C5.84527 1.71179 6.06472 1.76989 6.28355 1.83034C6.31211 1.83817 6.34067 1.84601 6.37009 1.85408C6.41939 1.8678 6.46856 1.88194 6.51756 1.89661C6.65819 1.93655 6.76197 1.95053 6.90189 1.90427C6.96928 1.83856 7.02121 1.77938 7.0764 1.70541C7.10951 1.66321 7.14268 1.62106 7.17591 1.57894C7.19308 1.55689 7.21025 1.53485 7.22793 1.51213C7.31576 1.40124 7.40831 1.29409 7.50083 1.18672C7.61762 1.05081 7.73405 0.914709 7.84878 0.777209C7.86844 0.753779 7.88811 0.730348 7.90838 0.706207C7.94562 0.661808 7.9827 0.617281 8.01957 0.572596C8.3846 0.139225 8.8624 -0.0823958 9.41831 0.198559ZM10.7692 6.05282C10.7362 6.08422 10.7032 6.11559 10.6702 6.14694C10.5813 6.23149 10.4928 6.31634 10.4043 6.40125C10.3115 6.49017 10.2184 6.5788 10.1253 6.66747C9.94944 6.83514 9.77383 7.00305 9.59831 7.17106C9.39835 7.36243 9.1981 7.55353 8.99782 7.7446C8.58611 8.1374 8.17477 8.53055 7.76367 8.92393C7.72561 8.89323 7.6876 8.86247 7.6496 8.83169C7.61784 8.806 7.61784 8.806 7.58544 8.7798C7.4895 8.69966 7.40111 8.61326 7.31245 8.52595C7.27366 8.48831 7.23486 8.45068 7.19604 8.41307C7.13605 8.35477 7.07619 8.29638 7.01659 8.23773C6.95825 8.18042 6.89947 8.12355 6.84062 8.06672C6.82319 8.04936 6.80577 8.032 6.78782 8.01411C6.63543 7.86808 6.46448 7.76422 6.25016 7.72448C6.02064 7.72481 5.87083 7.7634 5.69538 7.90707C5.55062 8.04845 5.49836 8.18392 5.47563 8.3786C5.52133 8.799 5.94851 9.10428 6.24383 9.38688C6.2858 9.4271 6.2858 9.4271 6.32862 9.46813C6.38723 9.52421 6.44589 9.58025 6.5046 9.63624C6.59394 9.72157 6.68291 9.80725 6.77188 9.89294C6.82924 9.94774 6.88662 10.0025 6.94403 10.0573C6.97029 10.0827 6.99655 10.1081 7.0236 10.1342C7.22568 10.3257 7.43941 10.5173 7.73567 10.5394C8.10642 10.5163 8.29913 10.3073 8.54647 10.0689C8.58644 10.031 8.62644 9.99315 8.66648 9.9553C8.7747 9.8528 8.88236 9.74978 8.98993 9.64666C9.1027 9.53869 9.21592 9.43114 9.32908 9.32354C9.51894 9.14287 9.70846 8.96189 9.89776 8.7807C10.1166 8.57126 10.3359 8.36229 10.5555 8.15357C10.7669 7.95262 10.978 7.75139 11.1889 7.55002C11.2786 7.46437 11.3684 7.37882 11.4583 7.29334C11.5641 7.19271 11.6696 7.09184 11.7749 6.99077C11.8136 6.95373 11.8524 6.91677 11.8913 6.8799C11.9443 6.82955 11.997 6.77891 12.0496 6.72818C12.0792 6.69992 12.1088 6.67165 12.1393 6.64253C12.2791 6.48482 12.2988 6.33179 12.2948 6.13101C12.2653 5.95085 12.1597 5.81384 12.0165 5.69587C11.877 5.60309 11.751 5.57166 11.5836 5.56581C11.537 5.5634 11.537 5.5634 11.4894 5.56094C11.1889 5.60951 10.9738 5.85574 10.7692 6.05282Z" fill="#08B285"/>
                        </svg>
                        <h2>Hörhilfen: 80% Erstattung bis zu 800 Euro in fünf Kalenderjahren</h2>
                      </div>
                      <div className="more-info-unit">
                        <svg width="17" height="17" viewBox="0 0 17 17" fill="none" xmlns="http://www.w3.org/2000/svg">
                          <path d="M9.41831 0.198559C9.66683 0.384554 9.85473 0.631264 10.0461 0.86844C10.1384 0.982376 10.2354 1.09199 10.334 1.20107C10.4944 1.37874 10.6439 1.56264 10.7906 1.75077C10.8597 1.83125 10.9112 1.88389 11.004 1.93707C11.0814 1.93848 11.0814 1.93848 11.1615 1.91665C11.207 1.90628 11.207 1.90628 11.2535 1.8957C11.2849 1.8877 11.3164 1.87971 11.3487 1.87147C11.3786 1.86394 11.4086 1.85642 11.4394 1.84867C11.5349 1.82387 11.6299 1.79792 11.7249 1.77178C11.7967 1.75253 11.8685 1.73331 11.9402 1.71412C12.0515 1.68429 12.1627 1.65426 12.2737 1.62363C13.3187 1.33612 13.3187 1.33612 13.7165 1.50039C13.9487 1.63879 14.1227 1.84155 14.1945 2.0945C14.2277 2.25063 14.2339 2.40984 14.2443 2.56851C14.2487 2.62737 14.2487 2.62737 14.2531 2.68742C14.2681 2.89722 14.2802 3.10682 14.2882 3.31697C14.2922 3.42176 14.2968 3.52651 14.3015 3.63127C14.3036 3.68251 14.3053 3.73377 14.3066 3.78503C14.3085 3.85727 14.3116 3.92937 14.3149 4.00156C14.3162 4.04312 14.3176 4.08469 14.319 4.12751C14.3383 4.23858 14.3383 4.23858 14.4326 4.30569C14.5801 4.37674 14.729 4.43307 14.8845 4.48629C14.9161 4.49736 14.9477 4.50844 14.9803 4.51985C15.081 4.55508 15.1819 4.58995 15.2828 4.6248C16.4593 5.03363 16.4593 5.03363 16.6422 5.19884C16.6693 5.22247 16.6964 5.24611 16.7243 5.27046C16.8988 5.46236 16.9374 5.65895 16.9331 5.90613C16.8615 6.45857 16.3126 7.03459 15.9874 7.47846C15.9587 7.51814 15.9587 7.51814 15.9294 7.55863C15.8928 7.6093 15.8557 7.65972 15.8182 7.70984C15.7464 7.80953 15.6967 7.88654 15.6703 8.0056C15.7021 8.14873 15.7754 8.25181 15.8602 8.37245C15.8871 8.41199 15.8871 8.41199 15.9146 8.45234C16.0161 8.60063 16.12 8.74741 16.2241 8.89409C16.2656 8.95257 16.307 9.01112 16.3484 9.06966C16.4023 9.14594 16.4567 9.22192 16.5114 9.29772C16.7566 9.64236 16.9897 9.98879 16.919 10.4208C16.8343 10.7362 16.655 10.922 16.3693 11.0909C16.102 11.2332 15.8042 11.3228 15.5176 11.423C15.4204 11.4575 15.3232 11.4921 15.2261 11.5267C15.1661 11.548 15.106 11.5692 15.0459 11.5903C14.8991 11.642 14.7527 11.6944 14.6068 11.7483C14.5786 11.7586 14.5504 11.769 14.5214 11.7796C14.4455 11.8083 14.4455 11.8083 14.3822 11.8761C14.3686 11.9523 14.3686 11.9523 14.366 12.0419C14.3641 12.0765 14.3623 12.1112 14.3604 12.1468C14.3587 12.1845 14.357 12.2222 14.3553 12.261C14.3532 12.2999 14.3512 12.3388 14.3491 12.3788C14.3426 12.5037 14.3365 12.6286 14.3305 12.7536C14.3245 12.8771 14.3183 13.0006 14.3119 13.1241C14.3079 13.201 14.3041 13.2779 14.3006 13.3548C14.2573 14.1978 14.2573 14.1978 14.003 14.4675C13.7462 14.6587 13.5014 14.7261 13.1757 14.6971C13.0078 14.6652 12.8431 14.623 12.678 14.5803C12.6309 14.5684 12.5838 14.5565 12.5367 14.5447C12.3058 14.4865 12.0754 14.4265 11.845 14.3661C11.8045 14.3556 11.7639 14.345 11.7222 14.3341C11.6459 14.3142 11.5696 14.2939 11.4935 14.2734C11.2508 14.2002 11.2508 14.2002 11.004 14.2051C10.9215 14.2725 10.8596 14.3518 10.795 14.4347C10.7556 14.4831 10.7161 14.5316 10.6767 14.58C10.6567 14.6049 10.6367 14.6299 10.6161 14.6556C10.5224 14.7712 10.4249 14.8837 10.3275 14.9964C10.2186 15.1232 10.1106 15.2504 10.0062 15.3806C9.52445 15.9813 9.52445 15.9813 9.16125 16.0638C8.86342 16.1012 8.62983 16.0292 8.38807 15.8672C8.19539 15.72 8.05072 15.5352 7.90156 15.3497C7.79302 15.2147 7.68062 15.0829 7.56762 14.9513C7.52982 14.9072 7.49202 14.8631 7.45424 14.819C7.43645 14.7982 7.41867 14.7774 7.40034 14.756C7.08404 14.3857 7.08404 14.3857 7.01944 14.2762C6.94613 14.1983 6.94613 14.1983 6.86512 14.2023C6.65088 14.226 6.44924 14.2678 6.24221 14.3249C6.21037 14.3334 6.17853 14.342 6.14573 14.3507C6.04509 14.3778 5.94456 14.4052 5.84404 14.4326C5.77625 14.4509 5.70845 14.4692 5.64065 14.4874C5.51617 14.5209 5.39173 14.5546 5.26736 14.5884C5.2404 14.5958 5.21345 14.6031 5.18568 14.6106C5.13665 14.624 5.08767 14.6376 5.03875 14.6514C4.73999 14.735 4.43729 14.7351 4.1517 14.6093C3.91216 14.4733 3.75804 14.2702 3.6781 14.0171C3.65746 13.9242 3.65259 13.8345 3.64773 13.7396C3.64553 13.6986 3.64332 13.6575 3.64106 13.6152C3.63937 13.5825 3.63937 13.5825 3.63765 13.5491C3.63157 13.4331 3.62468 13.3173 3.61793 13.2013C3.60941 13.054 3.60112 12.9067 3.5937 12.7593C3.58767 12.64 3.58083 12.5207 3.57346 12.4015C3.5708 12.3561 3.56844 12.3107 3.56638 12.2652C3.56347 12.2018 3.55944 12.1383 3.55535 12.0749C3.55339 12.0388 3.55143 12.0027 3.54941 11.9655C3.53212 11.8701 3.53212 11.8701 3.4438 11.8178C3.3323 11.7693 3.3323 11.7693 3.21873 11.7255C3.19395 11.7166 3.16916 11.7076 3.14362 11.6983C3.11715 11.6889 3.09069 11.6794 3.06343 11.6697C3.03538 11.6595 3.00734 11.6494 2.97845 11.6389C2.88879 11.6064 2.79905 11.5742 2.70929 11.542C2.50435 11.4683 2.29964 11.3941 2.09548 11.3185C2.03574 11.2964 1.97594 11.2744 1.91609 11.2525C1.82733 11.2199 1.73896 11.1865 1.65063 11.1528C1.62413 11.1432 1.59763 11.1336 1.57033 11.1237C1.32672 11.029 1.15417 10.8801 1.02665 10.6604C0.934337 10.4349 0.913773 10.175 1.01179 9.94947C1.13054 9.71624 1.27182 9.49988 1.42307 9.28476C1.46845 9.21937 1.51383 9.15398 1.5592 9.08858C1.58197 9.05593 1.60474 9.02327 1.6282 8.98962C1.73666 8.83365 1.84381 8.67687 1.95091 8.52006C1.96998 8.49226 1.98904 8.46445 2.00869 8.43581C2.03488 8.39753 2.03488 8.39753 2.0616 8.35848C2.0769 8.33614 2.0922 8.3138 2.10797 8.29079C2.18348 8.17664 2.19664 8.10882 2.17929 7.97267C2.12388 7.8665 2.05386 7.77082 1.98323 7.67335C1.94201 7.6148 1.90081 7.55624 1.85962 7.49768C1.83834 7.46777 1.81707 7.43786 1.79515 7.40704C1.63769 7.18457 1.48544 6.95877 1.33255 6.73344C1.30108 6.68715 1.26952 6.64092 1.23782 6.59477C1.03518 6.29933 0.876279 6.03834 0.953124 5.67139C1.02135 5.43737 1.15015 5.25823 1.37291 5.13461C1.61232 5.02299 1.85362 4.92415 2.10294 4.83443C2.15793 4.81433 2.15793 4.81433 2.21403 4.79382C2.32949 4.75164 2.44505 4.70973 2.56063 4.66785C2.6773 4.62548 2.79395 4.58305 2.91055 4.54048C2.9827 4.51414 3.0549 4.48792 3.12715 4.46184C3.15963 4.45 3.1921 4.43817 3.22556 4.42597C3.25409 4.41564 3.28262 4.4053 3.31201 4.39466C3.39368 4.3637 3.39368 4.3637 3.4892 4.29883C3.5296 4.19639 3.53082 4.09133 3.53599 3.98276C3.53783 3.94564 3.53968 3.90851 3.54158 3.87026C3.54438 3.81024 3.54438 3.81024 3.54724 3.74901C3.55152 3.66408 3.55581 3.57915 3.5601 3.49421C3.56673 3.36048 3.57323 3.22675 3.5796 3.093C3.58577 2.96382 3.59236 2.83466 3.59895 2.70549C3.60075 2.66581 3.60254 2.62613 3.6044 2.58525C3.6225 2.23643 3.66 1.94933 3.90286 1.67466C4.16334 1.46898 4.46915 1.45296 4.79562 1.47097C5.02381 1.49261 5.24465 1.55692 5.46485 1.6152C5.51826 1.62881 5.57168 1.64237 5.62512 1.65587C5.84527 1.71179 6.06472 1.76989 6.28355 1.83034C6.31211 1.83817 6.34067 1.84601 6.37009 1.85408C6.41939 1.8678 6.46856 1.88194 6.51756 1.89661C6.65819 1.93655 6.76197 1.95053 6.90189 1.90427C6.96928 1.83856 7.02121 1.77938 7.0764 1.70541C7.10951 1.66321 7.14268 1.62106 7.17591 1.57894C7.19308 1.55689 7.21025 1.53485 7.22793 1.51213C7.31576 1.40124 7.40831 1.29409 7.50083 1.18672C7.61762 1.05081 7.73405 0.914709 7.84878 0.777209C7.86844 0.753779 7.88811 0.730348 7.90838 0.706207C7.94562 0.661808 7.9827 0.617281 8.01957 0.572596C8.3846 0.139225 8.8624 -0.0823958 9.41831 0.198559ZM10.7692 6.05282C10.7362 6.08422 10.7032 6.11559 10.6702 6.14694C10.5813 6.23149 10.4928 6.31634 10.4043 6.40125C10.3115 6.49017 10.2184 6.5788 10.1253 6.66747C9.94944 6.83514 9.77383 7.00305 9.59831 7.17106C9.39835 7.36243 9.1981 7.55353 8.99782 7.7446C8.58611 8.1374 8.17477 8.53055 7.76367 8.92393C7.72561 8.89323 7.6876 8.86247 7.6496 8.83169C7.61784 8.806 7.61784 8.806 7.58544 8.7798C7.4895 8.69966 7.40111 8.61326 7.31245 8.52595C7.27366 8.48831 7.23486 8.45068 7.19604 8.41307C7.13605 8.35477 7.07619 8.29638 7.01659 8.23773C6.95825 8.18042 6.89947 8.12355 6.84062 8.06672C6.82319 8.04936 6.80577 8.032 6.78782 8.01411C6.63543 7.86808 6.46448 7.76422 6.25016 7.72448C6.02064 7.72481 5.87083 7.7634 5.69538 7.90707C5.55062 8.04845 5.49836 8.18392 5.47563 8.3786C5.52133 8.799 5.94851 9.10428 6.24383 9.38688C6.2858 9.4271 6.2858 9.4271 6.32862 9.46813C6.38723 9.52421 6.44589 9.58025 6.5046 9.63624C6.59394 9.72157 6.68291 9.80725 6.77188 9.89294C6.82924 9.94774 6.88662 10.0025 6.94403 10.0573C6.97029 10.0827 6.99655 10.1081 7.0236 10.1342C7.22568 10.3257 7.43941 10.5173 7.73567 10.5394C8.10642 10.5163 8.29913 10.3073 8.54647 10.0689C8.58644 10.031 8.62644 9.99315 8.66648 9.9553C8.7747 9.8528 8.88236 9.74978 8.98993 9.64666C9.1027 9.53869 9.21592 9.43114 9.32908 9.32354C9.51894 9.14287 9.70846 8.96189 9.89776 8.7807C10.1166 8.57126 10.3359 8.36229 10.5555 8.15357C10.7669 7.95262 10.978 7.75139 11.1889 7.55002C11.2786 7.46437 11.3684 7.37882 11.4583 7.29334C11.5641 7.19271 11.6696 7.09184 11.7749 6.99077C11.8136 6.95373 11.8524 6.91677 11.8913 6.8799C11.9443 6.82955 11.997 6.77891 12.0496 6.72818C12.0792 6.69992 12.1088 6.67165 12.1393 6.64253C12.2791 6.48482 12.2988 6.33179 12.2948 6.13101C12.2653 5.95085 12.1597 5.81384 12.0165 5.69587C11.877 5.60309 11.751 5.57166 11.5836 5.56581C11.537 5.5634 11.537 5.5634 11.4894 5.56094C11.1889 5.60951 10.9738 5.85574 10.7692 6.05282Z" fill="#08B285"/>
                        </svg>
                        <h2>Refraktive Chirurgien: Bis zu 1.500 Euro während der Vertragslaufzeit</h2>
                      </div>
                      <div className="more-info-unit">
                        <svg width="17" height="17" viewBox="0 0 17 17" fill="none" xmlns="http://www.w3.org/2000/svg">
                          <path d="M9.41831 0.198559C9.66683 0.384554 9.85473 0.631264 10.0461 0.86844C10.1384 0.982376 10.2354 1.09199 10.334 1.20107C10.4944 1.37874 10.6439 1.56264 10.7906 1.75077C10.8597 1.83125 10.9112 1.88389 11.004 1.93707C11.0814 1.93848 11.0814 1.93848 11.1615 1.91665C11.207 1.90628 11.207 1.90628 11.2535 1.8957C11.2849 1.8877 11.3164 1.87971 11.3487 1.87147C11.3786 1.86394 11.4086 1.85642 11.4394 1.84867C11.5349 1.82387 11.6299 1.79792 11.7249 1.77178C11.7967 1.75253 11.8685 1.73331 11.9402 1.71412C12.0515 1.68429 12.1627 1.65426 12.2737 1.62363C13.3187 1.33612 13.3187 1.33612 13.7165 1.50039C13.9487 1.63879 14.1227 1.84155 14.1945 2.0945C14.2277 2.25063 14.2339 2.40984 14.2443 2.56851C14.2487 2.62737 14.2487 2.62737 14.2531 2.68742C14.2681 2.89722 14.2802 3.10682 14.2882 3.31697C14.2922 3.42176 14.2968 3.52651 14.3015 3.63127C14.3036 3.68251 14.3053 3.73377 14.3066 3.78503C14.3085 3.85727 14.3116 3.92937 14.3149 4.00156C14.3162 4.04312 14.3176 4.08469 14.319 4.12751C14.3383 4.23858 14.3383 4.23858 14.4326 4.30569C14.5801 4.37674 14.729 4.43307 14.8845 4.48629C14.9161 4.49736 14.9477 4.50844 14.9803 4.51985C15.081 4.55508 15.1819 4.58995 15.2828 4.6248C16.4593 5.03363 16.4593 5.03363 16.6422 5.19884C16.6693 5.22247 16.6964 5.24611 16.7243 5.27046C16.8988 5.46236 16.9374 5.65895 16.9331 5.90613C16.8615 6.45857 16.3126 7.03459 15.9874 7.47846C15.9587 7.51814 15.9587 7.51814 15.9294 7.55863C15.8928 7.6093 15.8557 7.65972 15.8182 7.70984C15.7464 7.80953 15.6967 7.88654 15.6703 8.0056C15.7021 8.14873 15.7754 8.25181 15.8602 8.37245C15.8871 8.41199 15.8871 8.41199 15.9146 8.45234C16.0161 8.60063 16.12 8.74741 16.2241 8.89409C16.2656 8.95257 16.307 9.01112 16.3484 9.06966C16.4023 9.14594 16.4567 9.22192 16.5114 9.29772C16.7566 9.64236 16.9897 9.98879 16.919 10.4208C16.8343 10.7362 16.655 10.922 16.3693 11.0909C16.102 11.2332 15.8042 11.3228 15.5176 11.423C15.4204 11.4575 15.3232 11.4921 15.2261 11.5267C15.1661 11.548 15.106 11.5692 15.0459 11.5903C14.8991 11.642 14.7527 11.6944 14.6068 11.7483C14.5786 11.7586 14.5504 11.769 14.5214 11.7796C14.4455 11.8083 14.4455 11.8083 14.3822 11.8761C14.3686 11.9523 14.3686 11.9523 14.366 12.0419C14.3641 12.0765 14.3623 12.1112 14.3604 12.1468C14.3587 12.1845 14.357 12.2222 14.3553 12.261C14.3532 12.2999 14.3512 12.3388 14.3491 12.3788C14.3426 12.5037 14.3365 12.6286 14.3305 12.7536C14.3245 12.8771 14.3183 13.0006 14.3119 13.1241C14.3079 13.201 14.3041 13.2779 14.3006 13.3548C14.2573 14.1978 14.2573 14.1978 14.003 14.4675C13.7462 14.6587 13.5014 14.7261 13.1757 14.6971C13.0078 14.6652 12.8431 14.623 12.678 14.5803C12.6309 14.5684 12.5838 14.5565 12.5367 14.5447C12.3058 14.4865 12.0754 14.4265 11.845 14.3661C11.8045 14.3556 11.7639 14.345 11.7222 14.3341C11.6459 14.3142 11.5696 14.2939 11.4935 14.2734C11.2508 14.2002 11.2508 14.2002 11.004 14.2051C10.9215 14.2725 10.8596 14.3518 10.795 14.4347C10.7556 14.4831 10.7161 14.5316 10.6767 14.58C10.6567 14.6049 10.6367 14.6299 10.6161 14.6556C10.5224 14.7712 10.4249 14.8837 10.3275 14.9964C10.2186 15.1232 10.1106 15.2504 10.0062 15.3806C9.52445 15.9813 9.52445 15.9813 9.16125 16.0638C8.86342 16.1012 8.62983 16.0292 8.38807 15.8672C8.19539 15.72 8.05072 15.5352 7.90156 15.3497C7.79302 15.2147 7.68062 15.0829 7.56762 14.9513C7.52982 14.9072 7.49202 14.8631 7.45424 14.819C7.43645 14.7982 7.41867 14.7774 7.40034 14.756C7.08404 14.3857 7.08404 14.3857 7.01944 14.2762C6.94613 14.1983 6.94613 14.1983 6.86512 14.2023C6.65088 14.226 6.44924 14.2678 6.24221 14.3249C6.21037 14.3334 6.17853 14.342 6.14573 14.3507C6.04509 14.3778 5.94456 14.4052 5.84404 14.4326C5.77625 14.4509 5.70845 14.4692 5.64065 14.4874C5.51617 14.5209 5.39173 14.5546 5.26736 14.5884C5.2404 14.5958 5.21345 14.6031 5.18568 14.6106C5.13665 14.624 5.08767 14.6376 5.03875 14.6514C4.73999 14.735 4.43729 14.7351 4.1517 14.6093C3.91216 14.4733 3.75804 14.2702 3.6781 14.0171C3.65746 13.9242 3.65259 13.8345 3.64773 13.7396C3.64553 13.6986 3.64332 13.6575 3.64106 13.6152C3.63937 13.5825 3.63937 13.5825 3.63765 13.5491C3.63157 13.4331 3.62468 13.3173 3.61793 13.2013C3.60941 13.054 3.60112 12.9067 3.5937 12.7593C3.58767 12.64 3.58083 12.5207 3.57346 12.4015C3.5708 12.3561 3.56844 12.3107 3.56638 12.2652C3.56347 12.2018 3.55944 12.1383 3.55535 12.0749C3.55339 12.0388 3.55143 12.0027 3.54941 11.9655C3.53212 11.8701 3.53212 11.8701 3.4438 11.8178C3.3323 11.7693 3.3323 11.7693 3.21873 11.7255C3.19395 11.7166 3.16916 11.7076 3.14362 11.6983C3.11715 11.6889 3.09069 11.6794 3.06343 11.6697C3.03538 11.6595 3.00734 11.6494 2.97845 11.6389C2.88879 11.6064 2.79905 11.5742 2.70929 11.542C2.50435 11.4683 2.29964 11.3941 2.09548 11.3185C2.03574 11.2964 1.97594 11.2744 1.91609 11.2525C1.82733 11.2199 1.73896 11.1865 1.65063 11.1528C1.62413 11.1432 1.59763 11.1336 1.57033 11.1237C1.32672 11.029 1.15417 10.8801 1.02665 10.6604C0.934337 10.4349 0.913773 10.175 1.01179 9.94947C1.13054 9.71624 1.27182 9.49988 1.42307 9.28476C1.46845 9.21937 1.51383 9.15398 1.5592 9.08858C1.58197 9.05593 1.60474 9.02327 1.6282 8.98962C1.73666 8.83365 1.84381 8.67687 1.95091 8.52006C1.96998 8.49226 1.98904 8.46445 2.00869 8.43581C2.03488 8.39753 2.03488 8.39753 2.0616 8.35848C2.0769 8.33614 2.0922 8.3138 2.10797 8.29079C2.18348 8.17664 2.19664 8.10882 2.17929 7.97267C2.12388 7.8665 2.05386 7.77082 1.98323 7.67335C1.94201 7.6148 1.90081 7.55624 1.85962 7.49768C1.83834 7.46777 1.81707 7.43786 1.79515 7.40704C1.63769 7.18457 1.48544 6.95877 1.33255 6.73344C1.30108 6.68715 1.26952 6.64092 1.23782 6.59477C1.03518 6.29933 0.876279 6.03834 0.953124 5.67139C1.02135 5.43737 1.15015 5.25823 1.37291 5.13461C1.61232 5.02299 1.85362 4.92415 2.10294 4.83443C2.15793 4.81433 2.15793 4.81433 2.21403 4.79382C2.32949 4.75164 2.44505 4.70973 2.56063 4.66785C2.6773 4.62548 2.79395 4.58305 2.91055 4.54048C2.9827 4.51414 3.0549 4.48792 3.12715 4.46184C3.15963 4.45 3.1921 4.43817 3.22556 4.42597C3.25409 4.41564 3.28262 4.4053 3.31201 4.39466C3.39368 4.3637 3.39368 4.3637 3.4892 4.29883C3.5296 4.19639 3.53082 4.09133 3.53599 3.98276C3.53783 3.94564 3.53968 3.90851 3.54158 3.87026C3.54438 3.81024 3.54438 3.81024 3.54724 3.74901C3.55152 3.66408 3.55581 3.57915 3.5601 3.49421C3.56673 3.36048 3.57323 3.22675 3.5796 3.093C3.58577 2.96382 3.59236 2.83466 3.59895 2.70549C3.60075 2.66581 3.60254 2.62613 3.6044 2.58525C3.6225 2.23643 3.66 1.94933 3.90286 1.67466C4.16334 1.46898 4.46915 1.45296 4.79562 1.47097C5.02381 1.49261 5.24465 1.55692 5.46485 1.6152C5.51826 1.62881 5.57168 1.64237 5.62512 1.65587C5.84527 1.71179 6.06472 1.76989 6.28355 1.83034C6.31211 1.83817 6.34067 1.84601 6.37009 1.85408C6.41939 1.8678 6.46856 1.88194 6.51756 1.89661C6.65819 1.93655 6.76197 1.95053 6.90189 1.90427C6.96928 1.83856 7.02121 1.77938 7.0764 1.70541C7.10951 1.66321 7.14268 1.62106 7.17591 1.57894C7.19308 1.55689 7.21025 1.53485 7.22793 1.51213C7.31576 1.40124 7.40831 1.29409 7.50083 1.18672C7.61762 1.05081 7.73405 0.914709 7.84878 0.777209C7.86844 0.753779 7.88811 0.730348 7.90838 0.706207C7.94562 0.661808 7.9827 0.617281 8.01957 0.572596C8.3846 0.139225 8.8624 -0.0823958 9.41831 0.198559ZM10.7692 6.05282C10.7362 6.08422 10.7032 6.11559 10.6702 6.14694C10.5813 6.23149 10.4928 6.31634 10.4043 6.40125C10.3115 6.49017 10.2184 6.5788 10.1253 6.66747C9.94944 6.83514 9.77383 7.00305 9.59831 7.17106C9.39835 7.36243 9.1981 7.55353 8.99782 7.7446C8.58611 8.1374 8.17477 8.53055 7.76367 8.92393C7.72561 8.89323 7.6876 8.86247 7.6496 8.83169C7.61784 8.806 7.61784 8.806 7.58544 8.7798C7.4895 8.69966 7.40111 8.61326 7.31245 8.52595C7.27366 8.48831 7.23486 8.45068 7.19604 8.41307C7.13605 8.35477 7.07619 8.29638 7.01659 8.23773C6.95825 8.18042 6.89947 8.12355 6.84062 8.06672C6.82319 8.04936 6.80577 8.032 6.78782 8.01411C6.63543 7.86808 6.46448 7.76422 6.25016 7.72448C6.02064 7.72481 5.87083 7.7634 5.69538 7.90707C5.55062 8.04845 5.49836 8.18392 5.47563 8.3786C5.52133 8.799 5.94851 9.10428 6.24383 9.38688C6.2858 9.4271 6.2858 9.4271 6.32862 9.46813C6.38723 9.52421 6.44589 9.58025 6.5046 9.63624C6.59394 9.72157 6.68291 9.80725 6.77188 9.89294C6.82924 9.94774 6.88662 10.0025 6.94403 10.0573C6.97029 10.0827 6.99655 10.1081 7.0236 10.1342C7.22568 10.3257 7.43941 10.5173 7.73567 10.5394C8.10642 10.5163 8.29913 10.3073 8.54647 10.0689C8.58644 10.031 8.62644 9.99315 8.66648 9.9553C8.7747 9.8528 8.88236 9.74978 8.98993 9.64666C9.1027 9.53869 9.21592 9.43114 9.32908 9.32354C9.51894 9.14287 9.70846 8.96189 9.89776 8.7807C10.1166 8.57126 10.3359 8.36229 10.5555 8.15357C10.7669 7.95262 10.978 7.75139 11.1889 7.55002C11.2786 7.46437 11.3684 7.37882 11.4583 7.29334C11.5641 7.19271 11.6696 7.09184 11.7749 6.99077C11.8136 6.95373 11.8524 6.91677 11.8913 6.8799C11.9443 6.82955 11.997 6.77891 12.0496 6.72818C12.0792 6.69992 12.1088 6.67165 12.1393 6.64253C12.2791 6.48482 12.2988 6.33179 12.2948 6.13101C12.2653 5.95085 12.1597 5.81384 12.0165 5.69587C11.877 5.60309 11.751 5.57166 11.5836 5.56581C11.537 5.5634 11.537 5.5634 11.4894 5.56094C11.1889 5.60951 10.9738 5.85574 10.7692 6.05282Z" fill="#08B285"/>
                        </svg>
                        <h2>Brillen und Kontaktlinsen: 80% Erstattung – bis zu 400 Euro in zwei Kalenderjahren</h2>
                      </div>
                      <div className="more-info-unit">
                        <svg width="17" height="17" viewBox="0 0 17 17" fill="none" xmlns="http://www.w3.org/2000/svg">
                          <path d="M9.41831 0.198559C9.66683 0.384554 9.85473 0.631264 10.0461 0.86844C10.1384 0.982376 10.2354 1.09199 10.334 1.20107C10.4944 1.37874 10.6439 1.56264 10.7906 1.75077C10.8597 1.83125 10.9112 1.88389 11.004 1.93707C11.0814 1.93848 11.0814 1.93848 11.1615 1.91665C11.207 1.90628 11.207 1.90628 11.2535 1.8957C11.2849 1.8877 11.3164 1.87971 11.3487 1.87147C11.3786 1.86394 11.4086 1.85642 11.4394 1.84867C11.5349 1.82387 11.6299 1.79792 11.7249 1.77178C11.7967 1.75253 11.8685 1.73331 11.9402 1.71412C12.0515 1.68429 12.1627 1.65426 12.2737 1.62363C13.3187 1.33612 13.3187 1.33612 13.7165 1.50039C13.9487 1.63879 14.1227 1.84155 14.1945 2.0945C14.2277 2.25063 14.2339 2.40984 14.2443 2.56851C14.2487 2.62737 14.2487 2.62737 14.2531 2.68742C14.2681 2.89722 14.2802 3.10682 14.2882 3.31697C14.2922 3.42176 14.2968 3.52651 14.3015 3.63127C14.3036 3.68251 14.3053 3.73377 14.3066 3.78503C14.3085 3.85727 14.3116 3.92937 14.3149 4.00156C14.3162 4.04312 14.3176 4.08469 14.319 4.12751C14.3383 4.23858 14.3383 4.23858 14.4326 4.30569C14.5801 4.37674 14.729 4.43307 14.8845 4.48629C14.9161 4.49736 14.9477 4.50844 14.9803 4.51985C15.081 4.55508 15.1819 4.58995 15.2828 4.6248C16.4593 5.03363 16.4593 5.03363 16.6422 5.19884C16.6693 5.22247 16.6964 5.24611 16.7243 5.27046C16.8988 5.46236 16.9374 5.65895 16.9331 5.90613C16.8615 6.45857 16.3126 7.03459 15.9874 7.47846C15.9587 7.51814 15.9587 7.51814 15.9294 7.55863C15.8928 7.6093 15.8557 7.65972 15.8182 7.70984C15.7464 7.80953 15.6967 7.88654 15.6703 8.0056C15.7021 8.14873 15.7754 8.25181 15.8602 8.37245C15.8871 8.41199 15.8871 8.41199 15.9146 8.45234C16.0161 8.60063 16.12 8.74741 16.2241 8.89409C16.2656 8.95257 16.307 9.01112 16.3484 9.06966C16.4023 9.14594 16.4567 9.22192 16.5114 9.29772C16.7566 9.64236 16.9897 9.98879 16.919 10.4208C16.8343 10.7362 16.655 10.922 16.3693 11.0909C16.102 11.2332 15.8042 11.3228 15.5176 11.423C15.4204 11.4575 15.3232 11.4921 15.2261 11.5267C15.1661 11.548 15.106 11.5692 15.0459 11.5903C14.8991 11.642 14.7527 11.6944 14.6068 11.7483C14.5786 11.7586 14.5504 11.769 14.5214 11.7796C14.4455 11.8083 14.4455 11.8083 14.3822 11.8761C14.3686 11.9523 14.3686 11.9523 14.366 12.0419C14.3641 12.0765 14.3623 12.1112 14.3604 12.1468C14.3587 12.1845 14.357 12.2222 14.3553 12.261C14.3532 12.2999 14.3512 12.3388 14.3491 12.3788C14.3426 12.5037 14.3365 12.6286 14.3305 12.7536C14.3245 12.8771 14.3183 13.0006 14.3119 13.1241C14.3079 13.201 14.3041 13.2779 14.3006 13.3548C14.2573 14.1978 14.2573 14.1978 14.003 14.4675C13.7462 14.6587 13.5014 14.7261 13.1757 14.6971C13.0078 14.6652 12.8431 14.623 12.678 14.5803C12.6309 14.5684 12.5838 14.5565 12.5367 14.5447C12.3058 14.4865 12.0754 14.4265 11.845 14.3661C11.8045 14.3556 11.7639 14.345 11.7222 14.3341C11.6459 14.3142 11.5696 14.2939 11.4935 14.2734C11.2508 14.2002 11.2508 14.2002 11.004 14.2051C10.9215 14.2725 10.8596 14.3518 10.795 14.4347C10.7556 14.4831 10.7161 14.5316 10.6767 14.58C10.6567 14.6049 10.6367 14.6299 10.6161 14.6556C10.5224 14.7712 10.4249 14.8837 10.3275 14.9964C10.2186 15.1232 10.1106 15.2504 10.0062 15.3806C9.52445 15.9813 9.52445 15.9813 9.16125 16.0638C8.86342 16.1012 8.62983 16.0292 8.38807 15.8672C8.19539 15.72 8.05072 15.5352 7.90156 15.3497C7.79302 15.2147 7.68062 15.0829 7.56762 14.9513C7.52982 14.9072 7.49202 14.8631 7.45424 14.819C7.43645 14.7982 7.41867 14.7774 7.40034 14.756C7.08404 14.3857 7.08404 14.3857 7.01944 14.2762C6.94613 14.1983 6.94613 14.1983 6.86512 14.2023C6.65088 14.226 6.44924 14.2678 6.24221 14.3249C6.21037 14.3334 6.17853 14.342 6.14573 14.3507C6.04509 14.3778 5.94456 14.4052 5.84404 14.4326C5.77625 14.4509 5.70845 14.4692 5.64065 14.4874C5.51617 14.5209 5.39173 14.5546 5.26736 14.5884C5.2404 14.5958 5.21345 14.6031 5.18568 14.6106C5.13665 14.624 5.08767 14.6376 5.03875 14.6514C4.73999 14.735 4.43729 14.7351 4.1517 14.6093C3.91216 14.4733 3.75804 14.2702 3.6781 14.0171C3.65746 13.9242 3.65259 13.8345 3.64773 13.7396C3.64553 13.6986 3.64332 13.6575 3.64106 13.6152C3.63937 13.5825 3.63937 13.5825 3.63765 13.5491C3.63157 13.4331 3.62468 13.3173 3.61793 13.2013C3.60941 13.054 3.60112 12.9067 3.5937 12.7593C3.58767 12.64 3.58083 12.5207 3.57346 12.4015C3.5708 12.3561 3.56844 12.3107 3.56638 12.2652C3.56347 12.2018 3.55944 12.1383 3.55535 12.0749C3.55339 12.0388 3.55143 12.0027 3.54941 11.9655C3.53212 11.8701 3.53212 11.8701 3.4438 11.8178C3.3323 11.7693 3.3323 11.7693 3.21873 11.7255C3.19395 11.7166 3.16916 11.7076 3.14362 11.6983C3.11715 11.6889 3.09069 11.6794 3.06343 11.6697C3.03538 11.6595 3.00734 11.6494 2.97845 11.6389C2.88879 11.6064 2.79905 11.5742 2.70929 11.542C2.50435 11.4683 2.29964 11.3941 2.09548 11.3185C2.03574 11.2964 1.97594 11.2744 1.91609 11.2525C1.82733 11.2199 1.73896 11.1865 1.65063 11.1528C1.62413 11.1432 1.59763 11.1336 1.57033 11.1237C1.32672 11.029 1.15417 10.8801 1.02665 10.6604C0.934337 10.4349 0.913773 10.175 1.01179 9.94947C1.13054 9.71624 1.27182 9.49988 1.42307 9.28476C1.46845 9.21937 1.51383 9.15398 1.5592 9.08858C1.58197 9.05593 1.60474 9.02327 1.6282 8.98962C1.73666 8.83365 1.84381 8.67687 1.95091 8.52006C1.96998 8.49226 1.98904 8.46445 2.00869 8.43581C2.03488 8.39753 2.03488 8.39753 2.0616 8.35848C2.0769 8.33614 2.0922 8.3138 2.10797 8.29079C2.18348 8.17664 2.19664 8.10882 2.17929 7.97267C2.12388 7.8665 2.05386 7.77082 1.98323 7.67335C1.94201 7.6148 1.90081 7.55624 1.85962 7.49768C1.83834 7.46777 1.81707 7.43786 1.79515 7.40704C1.63769 7.18457 1.48544 6.95877 1.33255 6.73344C1.30108 6.68715 1.26952 6.64092 1.23782 6.59477C1.03518 6.29933 0.876279 6.03834 0.953124 5.67139C1.02135 5.43737 1.15015 5.25823 1.37291 5.13461C1.61232 5.02299 1.85362 4.92415 2.10294 4.83443C2.15793 4.81433 2.15793 4.81433 2.21403 4.79382C2.32949 4.75164 2.44505 4.70973 2.56063 4.66785C2.6773 4.62548 2.79395 4.58305 2.91055 4.54048C2.9827 4.51414 3.0549 4.48792 3.12715 4.46184C3.15963 4.45 3.1921 4.43817 3.22556 4.42597C3.25409 4.41564 3.28262 4.4053 3.31201 4.39466C3.39368 4.3637 3.39368 4.3637 3.4892 4.29883C3.5296 4.19639 3.53082 4.09133 3.53599 3.98276C3.53783 3.94564 3.53968 3.90851 3.54158 3.87026C3.54438 3.81024 3.54438 3.81024 3.54724 3.74901C3.55152 3.66408 3.55581 3.57915 3.5601 3.49421C3.56673 3.36048 3.57323 3.22675 3.5796 3.093C3.58577 2.96382 3.59236 2.83466 3.59895 2.70549C3.60075 2.66581 3.60254 2.62613 3.6044 2.58525C3.6225 2.23643 3.66 1.94933 3.90286 1.67466C4.16334 1.46898 4.46915 1.45296 4.79562 1.47097C5.02381 1.49261 5.24465 1.55692 5.46485 1.6152C5.51826 1.62881 5.57168 1.64237 5.62512 1.65587C5.84527 1.71179 6.06472 1.76989 6.28355 1.83034C6.31211 1.83817 6.34067 1.84601 6.37009 1.85408C6.41939 1.8678 6.46856 1.88194 6.51756 1.89661C6.65819 1.93655 6.76197 1.95053 6.90189 1.90427C6.96928 1.83856 7.02121 1.77938 7.0764 1.70541C7.10951 1.66321 7.14268 1.62106 7.17591 1.57894C7.19308 1.55689 7.21025 1.53485 7.22793 1.51213C7.31576 1.40124 7.40831 1.29409 7.50083 1.18672C7.61762 1.05081 7.73405 0.914709 7.84878 0.777209C7.86844 0.753779 7.88811 0.730348 7.90838 0.706207C7.94562 0.661808 7.9827 0.617281 8.01957 0.572596C8.3846 0.139225 8.8624 -0.0823958 9.41831 0.198559ZM10.7692 6.05282C10.7362 6.08422 10.7032 6.11559 10.6702 6.14694C10.5813 6.23149 10.4928 6.31634 10.4043 6.40125C10.3115 6.49017 10.2184 6.5788 10.1253 6.66747C9.94944 6.83514 9.77383 7.00305 9.59831 7.17106C9.39835 7.36243 9.1981 7.55353 8.99782 7.7446C8.58611 8.1374 8.17477 8.53055 7.76367 8.92393C7.72561 8.89323 7.6876 8.86247 7.6496 8.83169C7.61784 8.806 7.61784 8.806 7.58544 8.7798C7.4895 8.69966 7.40111 8.61326 7.31245 8.52595C7.27366 8.48831 7.23486 8.45068 7.19604 8.41307C7.13605 8.35477 7.07619 8.29638 7.01659 8.23773C6.95825 8.18042 6.89947 8.12355 6.84062 8.06672C6.82319 8.04936 6.80577 8.032 6.78782 8.01411C6.63543 7.86808 6.46448 7.76422 6.25016 7.72448C6.02064 7.72481 5.87083 7.7634 5.69538 7.90707C5.55062 8.04845 5.49836 8.18392 5.47563 8.3786C5.52133 8.799 5.94851 9.10428 6.24383 9.38688C6.2858 9.4271 6.2858 9.4271 6.32862 9.46813C6.38723 9.52421 6.44589 9.58025 6.5046 9.63624C6.59394 9.72157 6.68291 9.80725 6.77188 9.89294C6.82924 9.94774 6.88662 10.0025 6.94403 10.0573C6.97029 10.0827 6.99655 10.1081 7.0236 10.1342C7.22568 10.3257 7.43941 10.5173 7.73567 10.5394C8.10642 10.5163 8.29913 10.3073 8.54647 10.0689C8.58644 10.031 8.62644 9.99315 8.66648 9.9553C8.7747 9.8528 8.88236 9.74978 8.98993 9.64666C9.1027 9.53869 9.21592 9.43114 9.32908 9.32354C9.51894 9.14287 9.70846 8.96189 9.89776 8.7807C10.1166 8.57126 10.3359 8.36229 10.5555 8.15357C10.7669 7.95262 10.978 7.75139 11.1889 7.55002C11.2786 7.46437 11.3684 7.37882 11.4583 7.29334C11.5641 7.19271 11.6696 7.09184 11.7749 6.99077C11.8136 6.95373 11.8524 6.91677 11.8913 6.8799C11.9443 6.82955 11.997 6.77891 12.0496 6.72818C12.0792 6.69992 12.1088 6.67165 12.1393 6.64253C12.2791 6.48482 12.2988 6.33179 12.2948 6.13101C12.2653 5.95085 12.1597 5.81384 12.0165 5.69587C11.877 5.60309 11.751 5.57166 11.5836 5.56581C11.537 5.5634 11.537 5.5634 11.4894 5.56094C11.1889 5.60951 10.9738 5.85574 10.7692 6.05282Z" fill="#08B285"/>
                        </svg>
                        <h2>Impfungen und Malariaprophylaxe: Für Inland- und Reiseschutzimpfungen – bis zu 300 Euro in zwei Kalenderjahren</h2>
                      </div>
                      <div className="more-info-unit">
                        <svg width="17" height="17" viewBox="0 0 17 17" fill="none" xmlns="http://www.w3.org/2000/svg">
                          <path d="M9.41831 0.198559C9.66683 0.384554 9.85473 0.631264 10.0461 0.86844C10.1384 0.982376 10.2354 1.09199 10.334 1.20107C10.4944 1.37874 10.6439 1.56264 10.7906 1.75077C10.8597 1.83125 10.9112 1.88389 11.004 1.93707C11.0814 1.93848 11.0814 1.93848 11.1615 1.91665C11.207 1.90628 11.207 1.90628 11.2535 1.8957C11.2849 1.8877 11.3164 1.87971 11.3487 1.87147C11.3786 1.86394 11.4086 1.85642 11.4394 1.84867C11.5349 1.82387 11.6299 1.79792 11.7249 1.77178C11.7967 1.75253 11.8685 1.73331 11.9402 1.71412C12.0515 1.68429 12.1627 1.65426 12.2737 1.62363C13.3187 1.33612 13.3187 1.33612 13.7165 1.50039C13.9487 1.63879 14.1227 1.84155 14.1945 2.0945C14.2277 2.25063 14.2339 2.40984 14.2443 2.56851C14.2487 2.62737 14.2487 2.62737 14.2531 2.68742C14.2681 2.89722 14.2802 3.10682 14.2882 3.31697C14.2922 3.42176 14.2968 3.52651 14.3015 3.63127C14.3036 3.68251 14.3053 3.73377 14.3066 3.78503C14.3085 3.85727 14.3116 3.92937 14.3149 4.00156C14.3162 4.04312 14.3176 4.08469 14.319 4.12751C14.3383 4.23858 14.3383 4.23858 14.4326 4.30569C14.5801 4.37674 14.729 4.43307 14.8845 4.48629C14.9161 4.49736 14.9477 4.50844 14.9803 4.51985C15.081 4.55508 15.1819 4.58995 15.2828 4.6248C16.4593 5.03363 16.4593 5.03363 16.6422 5.19884C16.6693 5.22247 16.6964 5.24611 16.7243 5.27046C16.8988 5.46236 16.9374 5.65895 16.9331 5.90613C16.8615 6.45857 16.3126 7.03459 15.9874 7.47846C15.9587 7.51814 15.9587 7.51814 15.9294 7.55863C15.8928 7.6093 15.8557 7.65972 15.8182 7.70984C15.7464 7.80953 15.6967 7.88654 15.6703 8.0056C15.7021 8.14873 15.7754 8.25181 15.8602 8.37245C15.8871 8.41199 15.8871 8.41199 15.9146 8.45234C16.0161 8.60063 16.12 8.74741 16.2241 8.89409C16.2656 8.95257 16.307 9.01112 16.3484 9.06966C16.4023 9.14594 16.4567 9.22192 16.5114 9.29772C16.7566 9.64236 16.9897 9.98879 16.919 10.4208C16.8343 10.7362 16.655 10.922 16.3693 11.0909C16.102 11.2332 15.8042 11.3228 15.5176 11.423C15.4204 11.4575 15.3232 11.4921 15.2261 11.5267C15.1661 11.548 15.106 11.5692 15.0459 11.5903C14.8991 11.642 14.7527 11.6944 14.6068 11.7483C14.5786 11.7586 14.5504 11.769 14.5214 11.7796C14.4455 11.8083 14.4455 11.8083 14.3822 11.8761C14.3686 11.9523 14.3686 11.9523 14.366 12.0419C14.3641 12.0765 14.3623 12.1112 14.3604 12.1468C14.3587 12.1845 14.357 12.2222 14.3553 12.261C14.3532 12.2999 14.3512 12.3388 14.3491 12.3788C14.3426 12.5037 14.3365 12.6286 14.3305 12.7536C14.3245 12.8771 14.3183 13.0006 14.3119 13.1241C14.3079 13.201 14.3041 13.2779 14.3006 13.3548C14.2573 14.1978 14.2573 14.1978 14.003 14.4675C13.7462 14.6587 13.5014 14.7261 13.1757 14.6971C13.0078 14.6652 12.8431 14.623 12.678 14.5803C12.6309 14.5684 12.5838 14.5565 12.5367 14.5447C12.3058 14.4865 12.0754 14.4265 11.845 14.3661C11.8045 14.3556 11.7639 14.345 11.7222 14.3341C11.6459 14.3142 11.5696 14.2939 11.4935 14.2734C11.2508 14.2002 11.2508 14.2002 11.004 14.2051C10.9215 14.2725 10.8596 14.3518 10.795 14.4347C10.7556 14.4831 10.7161 14.5316 10.6767 14.58C10.6567 14.6049 10.6367 14.6299 10.6161 14.6556C10.5224 14.7712 10.4249 14.8837 10.3275 14.9964C10.2186 15.1232 10.1106 15.2504 10.0062 15.3806C9.52445 15.9813 9.52445 15.9813 9.16125 16.0638C8.86342 16.1012 8.62983 16.0292 8.38807 15.8672C8.19539 15.72 8.05072 15.5352 7.90156 15.3497C7.79302 15.2147 7.68062 15.0829 7.56762 14.9513C7.52982 14.9072 7.49202 14.8631 7.45424 14.819C7.43645 14.7982 7.41867 14.7774 7.40034 14.756C7.08404 14.3857 7.08404 14.3857 7.01944 14.2762C6.94613 14.1983 6.94613 14.1983 6.86512 14.2023C6.65088 14.226 6.44924 14.2678 6.24221 14.3249C6.21037 14.3334 6.17853 14.342 6.14573 14.3507C6.04509 14.3778 5.94456 14.4052 5.84404 14.4326C5.77625 14.4509 5.70845 14.4692 5.64065 14.4874C5.51617 14.5209 5.39173 14.5546 5.26736 14.5884C5.2404 14.5958 5.21345 14.6031 5.18568 14.6106C5.13665 14.624 5.08767 14.6376 5.03875 14.6514C4.73999 14.735 4.43729 14.7351 4.1517 14.6093C3.91216 14.4733 3.75804 14.2702 3.6781 14.0171C3.65746 13.9242 3.65259 13.8345 3.64773 13.7396C3.64553 13.6986 3.64332 13.6575 3.64106 13.6152C3.63937 13.5825 3.63937 13.5825 3.63765 13.5491C3.63157 13.4331 3.62468 13.3173 3.61793 13.2013C3.60941 13.054 3.60112 12.9067 3.5937 12.7593C3.58767 12.64 3.58083 12.5207 3.57346 12.4015C3.5708 12.3561 3.56844 12.3107 3.56638 12.2652C3.56347 12.2018 3.55944 12.1383 3.55535 12.0749C3.55339 12.0388 3.55143 12.0027 3.54941 11.9655C3.53212 11.8701 3.53212 11.8701 3.4438 11.8178C3.3323 11.7693 3.3323 11.7693 3.21873 11.7255C3.19395 11.7166 3.16916 11.7076 3.14362 11.6983C3.11715 11.6889 3.09069 11.6794 3.06343 11.6697C3.03538 11.6595 3.00734 11.6494 2.97845 11.6389C2.88879 11.6064 2.79905 11.5742 2.70929 11.542C2.50435 11.4683 2.29964 11.3941 2.09548 11.3185C2.03574 11.2964 1.97594 11.2744 1.91609 11.2525C1.82733 11.2199 1.73896 11.1865 1.65063 11.1528C1.62413 11.1432 1.59763 11.1336 1.57033 11.1237C1.32672 11.029 1.15417 10.8801 1.02665 10.6604C0.934337 10.4349 0.913773 10.175 1.01179 9.94947C1.13054 9.71624 1.27182 9.49988 1.42307 9.28476C1.46845 9.21937 1.51383 9.15398 1.5592 9.08858C1.58197 9.05593 1.60474 9.02327 1.6282 8.98962C1.73666 8.83365 1.84381 8.67687 1.95091 8.52006C1.96998 8.49226 1.98904 8.46445 2.00869 8.43581C2.03488 8.39753 2.03488 8.39753 2.0616 8.35848C2.0769 8.33614 2.0922 8.3138 2.10797 8.29079C2.18348 8.17664 2.19664 8.10882 2.17929 7.97267C2.12388 7.8665 2.05386 7.77082 1.98323 7.67335C1.94201 7.6148 1.90081 7.55624 1.85962 7.49768C1.83834 7.46777 1.81707 7.43786 1.79515 7.40704C1.63769 7.18457 1.48544 6.95877 1.33255 6.73344C1.30108 6.68715 1.26952 6.64092 1.23782 6.59477C1.03518 6.29933 0.876279 6.03834 0.953124 5.67139C1.02135 5.43737 1.15015 5.25823 1.37291 5.13461C1.61232 5.02299 1.85362 4.92415 2.10294 4.83443C2.15793 4.81433 2.15793 4.81433 2.21403 4.79382C2.32949 4.75164 2.44505 4.70973 2.56063 4.66785C2.6773 4.62548 2.79395 4.58305 2.91055 4.54048C2.9827 4.51414 3.0549 4.48792 3.12715 4.46184C3.15963 4.45 3.1921 4.43817 3.22556 4.42597C3.25409 4.41564 3.28262 4.4053 3.31201 4.39466C3.39368 4.3637 3.39368 4.3637 3.4892 4.29883C3.5296 4.19639 3.53082 4.09133 3.53599 3.98276C3.53783 3.94564 3.53968 3.90851 3.54158 3.87026C3.54438 3.81024 3.54438 3.81024 3.54724 3.74901C3.55152 3.66408 3.55581 3.57915 3.5601 3.49421C3.56673 3.36048 3.57323 3.22675 3.5796 3.093C3.58577 2.96382 3.59236 2.83466 3.59895 2.70549C3.60075 2.66581 3.60254 2.62613 3.6044 2.58525C3.6225 2.23643 3.66 1.94933 3.90286 1.67466C4.16334 1.46898 4.46915 1.45296 4.79562 1.47097C5.02381 1.49261 5.24465 1.55692 5.46485 1.6152C5.51826 1.62881 5.57168 1.64237 5.62512 1.65587C5.84527 1.71179 6.06472 1.76989 6.28355 1.83034C6.31211 1.83817 6.34067 1.84601 6.37009 1.85408C6.41939 1.8678 6.46856 1.88194 6.51756 1.89661C6.65819 1.93655 6.76197 1.95053 6.90189 1.90427C6.96928 1.83856 7.02121 1.77938 7.0764 1.70541C7.10951 1.66321 7.14268 1.62106 7.17591 1.57894C7.19308 1.55689 7.21025 1.53485 7.22793 1.51213C7.31576 1.40124 7.40831 1.29409 7.50083 1.18672C7.61762 1.05081 7.73405 0.914709 7.84878 0.777209C7.86844 0.753779 7.88811 0.730348 7.90838 0.706207C7.94562 0.661808 7.9827 0.617281 8.01957 0.572596C8.3846 0.139225 8.8624 -0.0823958 9.41831 0.198559ZM10.7692 6.05282C10.7362 6.08422 10.7032 6.11559 10.6702 6.14694C10.5813 6.23149 10.4928 6.31634 10.4043 6.40125C10.3115 6.49017 10.2184 6.5788 10.1253 6.66747C9.94944 6.83514 9.77383 7.00305 9.59831 7.17106C9.39835 7.36243 9.1981 7.55353 8.99782 7.7446C8.58611 8.1374 8.17477 8.53055 7.76367 8.92393C7.72561 8.89323 7.6876 8.86247 7.6496 8.83169C7.61784 8.806 7.61784 8.806 7.58544 8.7798C7.4895 8.69966 7.40111 8.61326 7.31245 8.52595C7.27366 8.48831 7.23486 8.45068 7.19604 8.41307C7.13605 8.35477 7.07619 8.29638 7.01659 8.23773C6.95825 8.18042 6.89947 8.12355 6.84062 8.06672C6.82319 8.04936 6.80577 8.032 6.78782 8.01411C6.63543 7.86808 6.46448 7.76422 6.25016 7.72448C6.02064 7.72481 5.87083 7.7634 5.69538 7.90707C5.55062 8.04845 5.49836 8.18392 5.47563 8.3786C5.52133 8.799 5.94851 9.10428 6.24383 9.38688C6.2858 9.4271 6.2858 9.4271 6.32862 9.46813C6.38723 9.52421 6.44589 9.58025 6.5046 9.63624C6.59394 9.72157 6.68291 9.80725 6.77188 9.89294C6.82924 9.94774 6.88662 10.0025 6.94403 10.0573C6.97029 10.0827 6.99655 10.1081 7.0236 10.1342C7.22568 10.3257 7.43941 10.5173 7.73567 10.5394C8.10642 10.5163 8.29913 10.3073 8.54647 10.0689C8.58644 10.031 8.62644 9.99315 8.66648 9.9553C8.7747 9.8528 8.88236 9.74978 8.98993 9.64666C9.1027 9.53869 9.21592 9.43114 9.32908 9.32354C9.51894 9.14287 9.70846 8.96189 9.89776 8.7807C10.1166 8.57126 10.3359 8.36229 10.5555 8.15357C10.7669 7.95262 10.978 7.75139 11.1889 7.55002C11.2786 7.46437 11.3684 7.37882 11.4583 7.29334C11.5641 7.19271 11.6696 7.09184 11.7749 6.99077C11.8136 6.95373 11.8524 6.91677 11.8913 6.8799C11.9443 6.82955 11.997 6.77891 12.0496 6.72818C12.0792 6.69992 12.1088 6.67165 12.1393 6.64253C12.2791 6.48482 12.2988 6.33179 12.2948 6.13101C12.2653 5.95085 12.1597 5.81384 12.0165 5.69587C11.877 5.60309 11.751 5.57166 11.5836 5.56581C11.537 5.5634 11.537 5.5634 11.4894 5.56094C11.1889 5.60951 10.9738 5.85574 10.7692 6.05282Z" fill="#08B285"/>
                        </svg>
                        <h2>Vorsorgeuntersuchungen: Zur Früherkennung von Krankheiten bis zu 500 Euro jährlich</h2>
                      </div>

                    </div>
                  </div>
                )}
              </div>

              <div className="insurance-grid-layout">

                <div className="insurance-cell">

                  <img src={rv} alt="Av-insurance" className="insurance-image" />

                  <div className="insurance-type">
                    <p className="type-font">KfzPolice</p>
                  </div>

                  <div className="insurer-price-container">

                    <div className="left-double-price-align">
                      <p className="double-price-font">Haft 44,74 €</p>
                      <p className="double-price-font">Kasko 34,53 €</p>
                    </div>

                    <p className="insurance-price">€ 79.27</p>

                  </div>

                  <button type="button" onClick={nextStep} className="choose-insurance-button">Continue</button>

                </div>
                <div className="insurance-cell">

                  <img src={all} alt="Av-insurance" className="insurance-image"/>

                  <div className="insurance-type">
                    <p className="type-font">KfzPolice</p>
                  </div>

                  <div className="insurer-price-container">

                    <div className="left-double-price-align">
                      <p className="double-price-font">Haft 44,74 €</p>
                      <p className="double-price-font">Kasko 34,53 €</p>
                    </div>

                    <p className="insurance-price">€ 79.27</p>

                  </div>

                  <button type="button" onClick={nextStep} className="choose-insurance-button">Continue</button>

                </div>
                <div className="insurance-cell">

                  <img src={all} alt="Av-insurance" className="insurance-image"/>

                  <div className="insurance-type">
                    <p className="type-font">KfzPolice</p>
                  </div>

                  <div className="insurer-price-container">

                    <div className="left-double-price-align">
                      <p className="double-price-font">Haft 44,74 €</p>
                      <p className="double-price-font">Kasko 34,53 €</p>
                    </div>

                    <p className="insurance-price">€ 79.27</p>

                  </div>

                  <button type="button" onClick={nextStep} className="choose-insurance-button">Continue</button>

                </div>
                <div className="insurance-cell">

                  <img src={rv} alt="Av-insurance" className="insurance-image" />

                  <div className="insurance-type">
                    <p className="type-font">KfzPolice</p>
                  </div>

                  <div className="insurer-price-container">

                    <div className="left-double-price-align">
                      <p className="double-price-font">Haft 44,74 €</p>
                      <p className="double-price-font">Kasko 34,53 €</p>
                    </div>

                    <p className="insurance-price">€ 79.27</p>

                  </div>

                  <button type="button" onClick={nextStep} className="choose-insurance-button">Continue</button>

                </div>
                <div className="insurance-cell">

                  <img src={all} alt="Av-insurance" className="insurance-image"/>

                  <div className="insurance-type">
                    <p className="type-font">KfzPolice</p>
                  </div>

                  <div className="insurer-price-container">

                    <div className="left-double-price-align">
                      <p className="double-price-font">Haft 44,74 €</p>
                      <p className="double-price-font">Kasko 34,53 €</p>
                    </div>

                    <p className="insurance-price">€ 79.27</p>

                  </div>

                  <button type="button" onClick={nextStep} className="choose-insurance-button">Continue</button>

                </div>
                <div className="insurance-cell">

                  <img src={all} alt="Av-insurance" className="insurance-image"/>

                  <div className="insurance-type">
                    <p className="type-font">KfzPolice</p>
                  </div>

                  <div className="insurer-price-container">

                    <div className="left-double-price-align">
                      <p className="double-price-font">Haft 44,74 €</p>
                      <p className="double-price-font">Kasko 34,53 €</p>
                    </div>

                    <p className="insurance-price">€ 79.27</p>

                  </div>

                  <button type="button" onClick={nextStep} className="choose-insurance-button">Continue</button>

                </div>

              </div>
            </>
          )} */}
          {step === 1 && (
            <>
            <div className="form-cell">
              <h1>Antrag auf VorsorgePRIVAT</h1>
              <h2 className="h2-title">Ich beantrage bei der Bayerischen Beamtenkrankenkasse AG den Abschluss der zuvor ausgewählten Krankenversicherung(en),
                  gegebenenfalls als Vertragsänderung.</h2>
              <div className="ambulant-container">
                  <h1 className="ambulant-title">Vorvertragliche Anzeigepflicht</h1>
                    <h2>Die in diesem Antrag gestellten Fragen sind nach bestem Wissen wahrheitsgemäß und vollständig zu beantworten; dabei
                    sind auch für unwesentlich gehaltene Erkrankungen und Beschwerden anzugeben.</h2>
                    <h2>Die Verletzung der vorvertraglichen Anzeigepflicht kann den Versicherer berechtigen, (je nach Verschulden) vom
                    Vertrag zurückzutreten, ihn zu kündigen, anzupassen oder anzufechten, was unter Umständen zur Leistungsfreiheit
                    des Versicherers (auch für bereits eingetretene Versicherungsfälle) führen kann - Einzelheiten siehe "Mitteilung nach
                    § 19 Absatz 5 Versicherungsvertragsgesetz (VVG)".</h2>
              </div>
              <h1>Daten zu versichernde Person</h1>
              <div className="form-grid-layout">
                <label>Wer soll versichert werden <select name="insurancefor" value={formData.insurancefor} defaultValue={"Me"} onChange={handleChange}><option value="">-- Bitte wählen --</option><option value="Me">Ich selbst</option><option value="Child">Mein Kind</option></select></label>
                <div className="datepicker-wrapper">
                  <label htmlFor="insurancestartdate">Beginn der Versicherung:</label>
                    <DatePicker
                      selected={
                        formData.insurancestartdate
                          ? new Date(formData.insurancestartdate)
                          : null
                      }
                      onChange={(date) =>
                        handleChange({ value: date.toISOString().split("T")[0] }, "insurancestartdate")
                    }
                      dateFormat="dd.MM.yyyy"
                      placeholderText="dd.mm.yyyy"
                      className="custom-react-date"
                      wrapperClassName="datepicker-wrapper"
                    />
                    <input
                      type="hidden"
                      name="insurancestartdate"
                      value={formData.insurancestartdate || ""}
                    />
                </div>
                <label>Vorname: <input type="text" name="name" value={formData.name} onChange={handleChange} placeholder="Vor Name"/></label>
                <label>Nachname: <input type="text" name="lastname" value={formData.lastname} onChange={handleChange} placeholder="Nach Name"/></label>
                <label>Anrede:<select name="genderpronouns" value={formData.genderpronouns} onChange={handleChange}><option value="">-- Bitte wählen --</option><option value="Mr">Mr</option><option value="Ms">Ms</option><option value="Mrs">Mrs</option></select></label>
                <div className="datepicker-wrapper">
                  <label htmlFor="birthday">Geburtsdatum:</label>
                    <DatePicker
                        selected={
                          formData.birthday
                            ? new Date(formData.birthday)
                            : null
                        }
                        onChange={(date) =>
                          handleChange({ value: date.toISOString().split("T")[0] }, "birthday")
                      }
                        dateFormat="dd.MM.yyyy"
                        placeholderText="dd.mm.yyyy"
                        className="custom-react-date"
                        wrapperClassName="datepicker-wrapper"
                      />
                      <input
                        type="hidden"
                        name="birthday"
                        value={formData.birthday || ""}
                    />
                </div>
                
                <label>Staatsangehörigkeit: 
                  <select name="nationality" value={formData.nationality} onChange={handleChange}>
                    <option value="">Wählen Sie ein Land</option>
                    {countries.map((country) => (
                      <option key={country} value={country}>
                        {country}
                      </option>
                    ))}
                  </select>
                </label>
                <label>Versicherungsregion:<select name="insuranceregion" value={formData.insuranceregion} onChange={handleChange}><option value="">-- Bitte wählen --</option><option value="region1">Bitte wählen Sie</option><option value="region2">Sonstige deutsche gesetzliche Krakenversicherung</option><option value="region3">Ausländische gesetzliche Krakenversicherung</option></select></label>
              </div>
              <div className="health-question">
                <h2 className="hearing-loss">Werden Sehhilfen (Brillen oder Kontaktlinsen) getragen oder sind sie erforderlich?</h2>
                <div style={{ display: 'flex', gap: '0rem', marginTop: '0rem', marginBottom: '0rem' }}>
                  <button className="yes-no-button" type="button" onClick={() => setFormData({ ...formData, glassesinformation: "Yes" })}>Ja</button>
                  <button className="yes-no-button" type="button" onClick={() => setFormData({ ...formData, glassesinformation: "No" })}>Nein</button>
                </div>
              </div>
              <div className="ambulant-container">
                  <h2>Die gewünschte Zusatzversicherung kann nur von gesetzlich versicherten Personen abgeschlossen werden. Eine privat
                  versicherte Person kann diesen Tarif nicht abschließen.</h2>
              </div>
              <div className="health-question">
                <h2 className="hearing-loss">Mit dem Klick auf „Ja“ bestätigen Sie, dass Hörgeräte nicht von der Krankenkasse übernommen werden.</h2>
                <div style={{ display: 'flex', gap: '0rem', marginTop: '0rem', marginBottom: '0rem' }}>
                  <button className="yes-no-button" type="button" onClick={() => setFormData({ ...formData, healthinformation: "Yes" })}>Ja</button>
                  <button className="yes-no-button" type="button" onClick={() => setFormData({ ...formData, healthinformation: "No" })}>Nein</button>
                </div>
              </div>
                
              <div className="green-price-field">
                      <div className="space-between">
                        <h1 className="ambulant-title">PensionPRIVATE</h1>
                        <p className="sub-text-field">13.47 €</p>
                      </div>
                      <div className="space-between">
                        <h2>Plus risk surcharge for visual aids</h2>
                        <p className="sub-text-field">4.00 €</p>
                      </div>
                      <div className="space-between">
                        <h2 className="ambulant-title-two">Ihr monatlicher Beitrag</h2>
                        <p className="sub-text-field-small">13.47 €</p>
                      </div>
              </div>
              <div className="space-between-buttons">
                <button type="button" onClick={nextStep} className="continue-button" disabled={!isStepValid()}>Weitermachen</button>
              </div>
            </div>
            </>
          )}

          {step === 2 && (
            <>
            <div className="form-cell">
              <h1>Kontaktdaten des Versicherungsnehmers</h1>
              <div className="form-grid-layout">
                <label>Stadt:
                  <AsyncSelect
                    styles={asyncSelectStyles}
                    className="custom-async-select"
                    cacheOptions
                    defaultOptions
                    loadOptions={fetchLocationSuggestions}
                    value={
                      formData.location && formData.postalcode
                        ? {
                            label: `${formData.postalcode} - ${formData.location}`,
                            value: JSON.stringify({
                              city: formData.location,
                              postalcode: formData.postalcode,
                            }),
                          }
                        : null
                    }
                    onChange={handleLocationChange}
                    placeholder="Typ Stadt.."
                    isClearable
                  />
                </label>
                <label>
                  Postleitzahl:
                  <input
                    type="text"
                    name="postalcode"
                    value={formData.postalcode}
                    readOnly
                    placeholder="Wird automatisch ausgefüllt"
                  />
                </label>

                <label>Straße:
                  <AsyncSelect
                    styles={asyncSelectStyles}
                    className="custom-async-select"
                    cacheOptions
                    defaultOptions
                    loadOptions={(inputValue) => fetchStreetSuggestions(inputValue, formData.postalcode)}
                    value={formData.street ? { label: formData.street, value: formData.street } : null}
                    onChange={(selected) => handleChange(selected, "street")}
                    isDisabled={!formData.postalcode}
                    placeholder="Straßen.."
                    isClearable
                  />
                </label>

                <label>Hausnummer: <input type="number" name="housenumber" value={formData.housenumber} onChange={handleChange} placeholder="Hausnummer in der Straße"/></label>
                <label>E-Mail: <input type="email" name="email" value={formData.email} onChange={handleChange} placeholder="E-Mail"/></label>
                <label>Handy: <input type="tel" name="tel" value={formData.tel} onChange={handleChange} placeholder="Deine Telefon Nummer"/></label>
              </div>
            </div>
            <div className="form-cell">  
              <h1>Versicherungsprämie</h1>
                <div className="form-grid-layout">
                  <label>Zahlweise:<select name="paymentfrequency" value={formData.paymentfrequency} onChange={handleChange}><option value="">-- Bitte wählen --</option><option value="Monthly">Monatlich</option><option value="Yearly">Jährlich</option></select></label>
                  <label>Kontoinhaber: <input type="text" name="accountholder" value={formData.accountholder} onChange={handleChange} placeholder={`${formData.name} ${formData.lastname}`.trim()}/></label>
                </div>
                <div className="green-price-field">
                      <div className="space-between">
                        <h1 className="ambulant-title">PensionPRIVATE</h1>
                        <p className="sub-text-field">13.47 €</p>
                      </div>
                      <div className="space-between">
                        <h2>Zzgl. Risikozuschlag für Sehhilfen</h2>
                        <p className="sub-text-field">4.00 €</p>
                      </div>
                      <div className="space-between">
                        <h2 className="ambulant-title-two">Ihr monatlicher Beitrag</h2>
                        <p className="sub-text-field-small">13.47 €</p>
                      </div>
                </div>
                {/* <h1>Zahlungsmöglichkeiten:</h1>
                <div className="payment-options-grid-layout">
                  
                  <div className="payment-option-container"><img src={paypal} alt="Av-insurance" className="insurance-image"/></div>
                  <div className="payment-option-container"><img src={klarna} alt="Av-insurance" className="insurance-image"/></div>
                  <div className="payment-option-container"><img src={sofort} alt="Av-insurance" className="insurance-image"/></div>
                </div> */}
                <div className="form-grid-layout">
                <label>
                  IBAN:
                  <input
                    type="text"
                    name="iban"
                    value={formData.iban}
                    onChange={(e) => {
                      const value = e.target.value.toUpperCase().replace(/[^A-Z0-9]/g, "");
                      if (value.length <= 34) {
                        handleChange({ target: { name: "iban", value } });
                      }
                    }}
                    placeholder="IBAN Nummer"
                  />
                </label>

                <label>
                  BIC:
                  <input
                    type="text"
                    name="bic"
                    value={formData.bic}
                    onChange={(e) => {
                      const value = e.target.value.toUpperCase().replace(/[^A-Z0-9]/g, "");
                      if (value.length <= 11) {
                        handleChange({ target: { name: "bic", value } });
                      }
                    }}
                    placeholder="BIC Nummer"
                  />
                </label>
                </div>
                <label>Bank: <input type="text" name="bank" value={formData.bank} onChange={handleChange} placeholder="Ihre Bank füllt automatisch aus"/></label>
                <div className="ambulant-container">
                  <div className="checkbox-text-hor">
                  <label className="custom-checkbox"><input type="checkbox" name="sepapermissions" checked={formData.sepapermissions} onChange={(e) =>
                        setFormData({ ...formData, [e.target.name]: e.target.checked })
                      }
                    />
                  </label>
                  <h2>Ich ermächtige die Bayerische Beamtenkrankenkasse AG (Gläubiger-ID: DE50BK000000156985), die Beiträge per SEPA-Lastschrift von meinem Konto einzuziehen. Die Versicherungsleistungen sollen ebenfalls auf dieses Konto überwiesen werden.</h2>
                  </div>
                  
                  <h2>Gleichzeitig weise ich meinen im Antrag genannten Zahlungsdienstleister an, die von der Bayerischen Beamtenkrankenkasse AG auf mein Konto gezogenen SEPA-Lastschriften einzulösen. (Informationen zum SEPA-Lastschriftmandat finden Sie auch in den zusätzlichen Vertragsgrundlagen und ergänzenden Erklärungen des Antragstellers und der zu versichernden Personen.)</h2>
                </div>
            
              <div className="space-between-buttons">
                <button type="button" onClick={prevStep} className="back-button">Zurück</button>
                <button type="button" onClick={nextStep} className="continue-button" disabled={!isStepValid()}>Weitermachen</button>
              </div>

            </div>
            </>
          )}

          {step === 3 && (
            <>
            <div className="form-cell">
              <h1>Vertragliche Grundlagen und Erklärungen des Antragstellers und der zu versichernden Personen</h1>
              <h2 className="split-a-bit">In diesem Schritt finden Sie alle gesetzlich erforderlichen Unterlagen zu Ihrem gewünschten Schutz, bevor Sie am Ende der Seite Ihren Online-Antrag an uns senden können.</h2>
              <h2 className="split-a-bit">Wir bitten Sie, die folgenden Erklärungen/Einwilligungen durch Anklicken der entsprechenden Kästchen abzugeben und die aufgeführten Vertragsunterlagen zu lesen. Dies ist für die weitere Bearbeitung Ihres Antrags erforderlich. Durch Anklicken des Buttons „Download“ wird das PDF-Dokument heruntergeladen. Bitte drucken oder speichern Sie die Vertragsunterlagen.</h2>
              <h2 className="split-a-bit">Hinweis:
              Wir bitten um Verständnis, dass ein Vertragsschluss nur möglich ist, wenn Sie die entsprechenden Erklärungen/Einwilligungen abgeben bzw. erteilen und die AGB heruntergeladen haben. Zum Öffnen der Dateien benötigen Sie den kostenlosen Adobe Reader. Falls Sie diesen noch nicht auf Ihrem Computer installiert haben, können Sie ihn hier herunterladen.</h2>
            </div>
            <div className="form-cell">
                <h1>Verzicht auf Beratung</h1>
                <div className="checkbox-text-hor">
                    <label className="custom-checkbox"><input type="checkbox" name="forfitdamages" checked={formData.forfitdamages} onChange={(e) =>
                          setFormData({ ...formData, [e.target.name]: e.target.checked })
                        }
                      />
                    </label>
                    <h2>Mit Abschluss des Online-Kaufes verzichte ich auf jegliche Beratung. Mir ist bekannt, dass sich dieser Verzicht negativ auf meine Möglichkeit auswirken kann, Schadensersatzansprüche wegen Verletzung der Beratungs- und Dokumentationspflicht geltend zu machen.</h2>
                </div>
            </div>
            <div className="form-cell">
              <h1>Wichtige Vertragsinformationen herunterladen</h1>
              <h2>
              Laden Sie sich bitte die Vertragsinformationen nach § 7 VVG (Produktinformationsblatt, Verbraucherinformationen und Tarifbestimmungen mit den zugehörigen Allgemeinen Versicherungsbedingungen), das Merkblatt „Weitere Vertragsgrundlagen und zusätzliche Erklärungen des Antragstellers und der zu versichernden Personen“ sowie die Informationen für Vermittler und Versicherer, die Zusammenfassung der Antragsfragen und die Informationen zum Beratungsverzicht herunter.
              </h2>

              <div className="space-between-buttons">
                <button type="button" onClick={() => handleDownload("/Vertragsinformationen.pdf", "VertragsinformationenDownloaded")} className="download-button">
                Herunterladen
                </button>
              </div>

              <div className="checkbox-text-hor">
                <label className="custom-checkbox">
                  <input type="checkbox" name="termsConsent" checked={formData.termsConsent}
                    onChange={(e) =>
                      setFormData({
                        ...formData,
                        [e.target.name]: e.target.checked,
                      })
                    }
                    disabled={!downloads.VertragsinformationenDownloaded}
                  />
                </label>
                <h2>
                Durch Ankreuzen des Kästchens bestätige ich, dass ich die Vertragsinformationen nach § 7 Versicherungsvertragsgesetz (VVG) (Produktinformationsblatt, Verbraucherinformationen und Tarifbestimmungen mit den dazugehörigen Allgemeinen Versicherungsbedingungen) rechtzeitig vor Abgabe meiner Vertragserklärung erhalten habe.
                </h2>
              </div>
              <h2>Ich bestätige außerdem, dass ich die Widerrufsbelehrung und die Hinweise und Erläuterungen im Merkblatt „Weitere Vertragsgrundlagen und ergänzende Erklärungen des Antragstellers und der zu versichernden Personen“ sowie die Makler- und Versichererinformationen, die Zusammenfassung der Antragsfragen und die Hinweise zum Beratungsverzicht gelesen habe.</h2>
            </div>

            <div className="form-cell">
              <h1>Keine Papierdokumente</h1>
              <div className="checkbox-text-hor">
                    <label className="custom-checkbox"><input type="checkbox" name="waiverreciept" checked={formData.waiverreciept} onChange={(e) =>
                          setFormData({ ...formData, [e.target.name]: e.target.checked })
                        }
                      />
                    </label>
                    <h2>Ich verzichte auf die Zusendung der oben genannten Vertrags-, Versicherer- und Vermittlerinformationen in Papierform per Post.</h2>
              </div>
            </div>
            <div className="form-cell">
              <h1>Wichtige Datenschutzinformationen herunterladen</h1>
              <h2>Laden Sie sich bitte die Einwilligungsklauseln zum Datenschutz und zur Einwilligung in die Erhebung und Nutzung von Gesundheitsdaten sowie die Schweigepflichtentbindungserklärung herunter.</h2>

              <div className="space-between-buttons">
                <button type="button" onClick={() => handleDownload("/Datenschutz.pdf", "datenschutzDownloaded")} className="download-button">Download</button>
              </div>

              <div className="checkbox-text-hor">
                <label className="custom-checkbox">
                  <input type="checkbox" name="dataprivacy" checked={formData.dataprivacy}
                    onChange={(e) =>
                      setFormData({
                        ...formData,
                        [e.target.name]: e.target.checked,
                      })
                    }
                    disabled={!downloads.datenschutzDownloaded}
                  />
                </label>
                <h2>
                Durch Anklicken des Kontrollkästchens bestätige ich, dass ich die „Einwilligungsklauseln zum Datenschutz und zur Einwilligung in die Erhebung und Nutzung von Gesundheitsdaten sowie die Vertraulichkeitserklärung“ gelesen und erhalten habe und mit der darin beschriebenen Nutzung meiner personenbezogenen Daten einverstanden bin.
                Diese Einwilligung ist Bestandteil dieses Antrags und wird Vertragsbestandteil.
                </h2>
              </div>
            </div>
 
            <div className="form-cell">
              <h1>Sicherheitsabfrage</h1>
              <h2>Geben Sie den im Bild oben angezeigten Sicherheitscode ein.</h2>
              <img src={captcha} alt="captcha" className="captcha-image" />
              <label>Input CAPTCHA: <input type="text" name="captcha" value={formData.captcha} onChange={handleChange} placeholder="Type"/></label>
            </div>
            <div className="form-cell">
            <h1>Schlussbemerkung</h1>
            
            <h2>Mit dem Klick auf „Jetzt beantragen & bezahlen“ bestätige ich, dass der Antrag inklusive der Angaben zu meinem Gesundheitszustand alle von mir gemachten Angaben enthält und bin mit der elektronischen Weiterleitung des Antrags an die Krankenkasse einverstanden.</h2>
            <h2>Die VorsorgePRIVAT-Tarife werden parallel angeboten. Ich habe die Erläuterungen im Informationsblatt „Weitere Vertragsgrundlagen und Erklärungen des Antragstellers und der zu versichernden Personen“ gelesen.</h2>
              <div className="space-between-buttons">
                <button type="button" onClick={prevStep} className="back-button">Zurück</button>
                <button type="submit" onClick={handleSubmit} className="continue-button" disabled={!isStepValid()}>Jetzt beantragen & bezahlen</button>
              </div>
            </div>
            </>
          )}

          {step === 4 && (
            <>
            <div className="form-cell">
              <h1 className="split-a-bit">Vielen Dank für Ihr Vertrauen und Ihre Entscheidung für die Bayerische Beamtenkrankenkasse AG als Partner rund um Ihre Gesundheit.</h1>
              <h1 className="split-a-bit">Ihr Antrag mit der Antragsnummer MY642450230XXJR ist bei uns eingegangen.</h1>
              <h2 className="split-a-bit">Ihre Daten sind sicher und verschlüsselt bei uns angekommen. Das bestätigen wir Ihnen auch noch einmal per Mail.</h2>
              <div className="space-between-buttons">
                <button
                  type="button"
                  onClick={() => handleDownload("")}
                  className="download-button"
                >
                  Herunterladen
                </button>
              </div>
            </div>
            <div className="form-cell">
                <img className="final-svg" src={success} alt="success"/>
            </div>
            <div className="form-cell">
                <div className="message-grid-layout">
                  <div className="message-container"><h1 className="msg-color">Wir haben Ihren Antrag erhalten.</h1></div>
                  <div className="message-container"><h1 className="msg-color">Wir prüfen Ihren Antrag.</h1></div>
                  <div className="message-container"><h1 className="msg-color">Sie erhalten Ihre Unterlagen.</h1></div>
                </div>
            </div>
            <div className="form-cell">
                <h2>Bayerische Beamtenkrankenkasse AG</h2>
                <h2>Postanschrift: Maximilianstraße 53, 81537 München</h2>
                <h2>Hausanschrift: Warngauer Straße 30, 81539 München</h2>
                <h2>E-Mail: service@vkb.de</h2>
                <h2>Telefon: (089) 2160-69 00</h2>
                <h2>Fax: (089) 21 60-80 01</h2>
            </div>
            </>
          )}
        </form>
      </div>
    </div>
  );
};

export default Form;